[00:01:32] <ShivalWolf> bye bye 000webhost and its partners/sub companies - http://www.troyhunt.com/2015/10/breaches-traders-plain-text-passwords.html
[00:01:33] <PinkiePieBot> [ Troy Hunt: Breaches, traders, plain text passwords, ethical disclosure and 000webhost ]
[00:01:44] <ShivalWolf> seriously pllain text passwords and login/account creation with HTTP GET
[00:02:00] <ShivalWolf> thats a serious level of incompitance
[00:09:54] *** Snoarin is now known as Vega
[00:11:00] *** zz_CyberJacob is now known as CyberJacob
[00:19:03] <Phase> i once used them to host some files
[00:19:12] <Phase> everything was world writable
[00:19:32] <Phase> Encorced as word writable, you couln't make things not
[00:19:33] <Seoson> I just read that article ... Oh dear they've screwed up.
[00:19:41] <ShivalWolf> lol
[00:22:54] <Seoson> I like how their registration form uses unencrypted GET. Why? WHY? Arghh ...
[00:24:12] <Phase> https://haveibeenpwned.com/ oh nice, even do email notifications
[00:24:12] <PinkiePieBot> [ Have I been pwned? Check if your email has been compromised in a data breach ]
[00:24:18] *** Joins: Webster (Webster@Pony-jrej46.fios.verizon.net)
[00:24:42] <ShivalWolf> Phase: welcome to like 4 years ago
[00:24:54] <Phase> yes but i don't pay attention to things
[00:26:26] * ShivalWolf hands Phase  a canander so he can keep track of time
[00:26:41] <Phase> canader
[00:26:55] <ShivalWolf> lol phone typing badness
[00:26:57] <Phase> it's like canada before its morning coffee
[00:27:05] <ShivalWolf> calendar
[00:27:11] <ShivalWolf> Phase: just like me typing right now to
[00:27:13] <ShivalWolf> soo need caffine
[00:28:07] <Phase> canaderans
[00:28:45] * ShivalWolf remembers when he was in primary school
[00:29:02] <ShivalWolf> australians come from australia, americans from from america, canadians come from canadia
[00:29:46] *** Quits: Webster (Webster@Pony-jrej46.fios.verizon.net) (Ping timeout: 121 seconds)
[00:45:43] *** Joins: Fallfeathers (Fallfeather@Pony-0pt6g2.bigpond.net.au)
[00:50:19] *** Quits: Fallfeathers (Fallfeather@Pony-0pt6g2.bigpond.net.au) (Quit: My people need me!)
[00:51:33] *** Joins: Webster (Webster@Pony-jrej46.fios.verizon.net)
[01:05:41] <Moonlightning> ShivalWolf: caffine? Is that one of those obscure trig functions? x.x
[01:11:09] *** Quits: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net) (Ping timeout: 121 seconds)
[01:13:38] *** Joins: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net)
[01:13:57] *** Quits: MisterSkids (ejd@Pony-fej07d.res.rr.com) (Connection closed)
[01:16:16] <Seoson> Today is brainfuck change your password day (at least for me)! I've decided to change the password of every account I or my password manger can remember to some randome brainfuck value and choose a new password for my mail account(s) (not so much brainfuck). One of my weaker passwords has appeared in hash lists I monitor. Nothing valueable behind that password, but a good alarm signal to
[01:16:18] <Seoson> change 'em all just in case ;-)
[01:18:00] <wolfyshy> I've always wondered how does a channel with a censor policy handle brainfuck?
[01:19:51] *** Joins: MisterSkids (ejd@Pony-fej07d.res.rr.com)
[01:20:35] <Seoson> I dunno: Censor it? :P Luckily we are in a channel that doesn't care :P
[01:23:58] <Colgate> a channel witha  censor policy?
[01:24:16] <Colgate> oh, you mean for like, "indecent language"
[01:25:12] <wolfyshy> Colgate: like freenode's silly policies
[01:25:24] <wolfyshy> you get autokicked on #ubuntu last I checked
[01:25:28] <wolfyshy> don't feel like checking again
[01:51:22] *** Quits: Phase (Phase4@Pony-lu48ce.lnk.telstra.net) (Connection closed)
[01:51:55] *** Joins: Phase (Phase4@Pony-lu48ce.lnk.telstra.net)
[01:55:59] <Seoson> Logging into my FireTV Stick next time is going to be a pain O_o
[02:00:26] <Lapsus> Seoson: oh shit, is hunter2 on that list
[02:00:59] *** CyberJacob is now known as zz_CyberJacob
[02:01:10] *** Joins: Asoka (Asoka@Pony-idj4od.net-htp.de)
[02:04:20] *** Quits: Asoka_White (Asoka@Pony-37ck71.net-htp.de) (Ping timeout: 121 seconds)
[02:04:21] <Seoson> Probably xD
[02:08:42] * HoneyDrops whines.  10 turn pots are pricy :(
[02:09:21] <Seoson> Point of what I'm doing is that I've been included in 2 different breaches in the past. So I used one my weaker passwords unsalted, md5ed and checked if it one day would appear on an online cracker. It does now. I don't use it anymore, but I've extended my password over the time. Meaning that parts of the original weak password are still included in my stronger passwords, which lowers it's
[02:09:23] <Seoson> entropy significantly
[02:09:48] *** Joins: locodashie11 (locodash11@Pony-osmcfg.co.comcast.net)
[02:10:12] <Seoson> I wanted to change all accounts to randome passwords anyway one day and did so for new accounts, but now is a good time to change the old ones as well.
[02:12:31] * Lapsus prints a tiny gearbox for HoneyDrops
[02:13:11] <Moonlightning> Seoson: what about the sites with low charlimits?
[02:13:55] <Seoson> Like my onlinebanking? Fuck them :O
[02:14:10] <Moonlightning> 8**16 is only 2.8*10**14
[02:14:28] * Moonlightning blinks
[02:14:32] <Moonlightning> So what do you do?
[02:14:50] <Seoson> My onlinebanking password is exaclty 6 characters long, because the service doesn't allow it to be longer
[02:14:57] <Seoson> Isn't that awesome?
[02:15:44] <Seoson> It doesn't even allow special characters
[02:16:07] <Seoson> My username literally has more entropy than my password
[02:19:50] <Seoson> Moonlightning: Also use ^ for powers :D
[02:20:58] <Moonlightning> Seoson: ^ is for xor :V
[02:21:10] <Seoson> not in LaTeX
[02:21:10] <Moonlightning> also, holy /shit./
[02:21:33] <Moonlightning> but yes in virtually every common programming language
[02:21:46] <Seoson> (which is the standard way to express math as far as I know)
[02:21:46] <Moonlightning> it's probably both or some shit in PHP, but I don't count PHP :V
[02:22:01] <Moonlightning> No, the standard way to express it is in actual superscript :p
[02:24:00] <Seoson> Have some c++ http://www.cplusplus.com/reference/cmath/pow/
[02:24:04] <PinkiePieBot> [ pow - C++ Reference ]
[02:24:16] <Seoson> It doesn't support the operator, but it uses it in the printf :D
[02:25:49] <Seoson> Trust me it's really quite the standard
[02:51:16] <Seoson> This anti XSS approach is so silly that it's quite nice actually. It replaces each "operator" with an almost indentical looking unicode symbol
[02:57:53] * Moonlightning boops Seoson with a 3D comic-book bubble. “Pow!”
[02:59:14] *** Joins: Asoka_White (Asoka@Pony-f7gf90.net-htp.de)
[03:02:27] *** Quits: Asoka (Asoka@Pony-idj4od.net-htp.de) (Ping timeout: 121 seconds)
[03:16:30] *** Quits: MangoBloom (djazz@djazz.se) (Ping timeout: 121 seconds)
[03:16:40] *** Joins: djazz (djazz@Pony-s73dok.tbcn.telia.com)
[03:21:45] *** Seoson is now known as Seoson|BNC
[03:25:39] *** Quits: Phase (Phase4@Pony-lu48ce.lnk.telstra.net) (Quit: Leaving)
[03:41:44] *** Joins: Phase (Phase4@Pony-lu48ce.lnk.telstra.net)
[03:59:00] *** Starburn is now known as Flowheart
[04:02:19] *** Quits: Midnight_Tinker (MidnightTin@Pony-5qttkj.dc.cox.net) (Connection closed)
[04:20:50] *** RedHelper is now known as Apple_Bloom_
[04:22:12] *** Apple_Bloom_ is now known as RedHelper
[04:25:39] *** Quits: Phase (Phase4@Pony-lu48ce.lnk.telstra.net) (Quit: Leaving)
[04:26:46] *** Quits: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net) (Ping timeout: 121 seconds)
[04:42:51] *** Joins: Phase (Phase4@Pony-lu48ce.lnk.telstra.net)
[04:49:40] *** Quits: DJ-C0L7[CSS] (IceChat77@DJ-C0L7.EIT.LLC) (Quit: "switchin' boxes, back in a bit")
[04:50:23] *** Joins: DataByte (DataByteBro@Pony-n3en0j.hfc.comcastbusiness.net)
[04:52:38] *** Quits: WorkingData (DataByteBro@Pony-n3en0j.hfc.comcastbusiness.net) (Ping timeout: 121 seconds)
[05:32:02] * Moonlightning opens the Linux menuconfig and starts messing around.
[05:32:15] <Moonlightning> Let's change all the options to what sounds good! :D
[05:32:49] * Moonlightning did back up /dev/sda1 to the root volume first!
[05:32:50] <Vega> Food,sex,money,ponies,jo- oh iu meant OS wise?
[05:32:57] <Vega> You*
[05:33:01] <Moonlightning> kernel-wise.
[05:34:35] <Moonlightning> Aha, there's the /proc/config.gz option
[05:34:56] <Moonlightning> oh, xz is slower than gzip for decompression…better leave it as gzip, then
[05:35:32] <Moonlightning> Optimize very likely|very unlikely branches? Sounds good to me!
[05:36:03] *** Joins: DJ-C0L7[EIT] (IceChat77@DJ-C0L7.EIT.LLC)
[05:37:10] <Moonlightning> -fstack-protector-strong? Sure, why not. Comes with an increase in kernel size, but the help didn't say anything about performance hits!
[05:39:02] <Phase> there's a small performance hit, but not worth worrying about imo
[05:39:21] <Moonlightning> Well then!
[05:39:44] <Phase> since it has to retreive/check a value for/on the stack
[05:40:51] <Moonlightning> Forced module unloading? Nope. Hay, the help text says to turn it off if unsure!
[05:50:13] <Moonlightning> hmm, okay
[05:50:21] <Moonlightning> So what about all these partition table support things.
[05:50:23] *** Quits: MisterSkids (ejd@Pony-fej07d.res.rr.com) (Ping timeout: 121 seconds)
[05:50:35] <Moonlightning> A bunch of them were set by default.
[05:50:44] <Moonlightning> But they all seem to say /if unsure, select N/
[05:50:53] <Moonlightning> Even the overarching support option
[05:51:24] <Moonlightning> Is this just for booting off a disk with these kinds of partition tables, or what?
[05:55:58] <Moonlightning> Because, I mean, if not, I would just check all of these, on the off chance that one day I get a disk with such a partition table and I wanna read it.
[05:56:09] <Moonlightning> …well…maybe not ALL of them. But /most/ of them.
[05:56:47] <Moonlightning> But, at the same time…if you need these options to be on for support of that partition table at all, then why does it recommend that you leave them off?
[05:56:49] *** Joins: locodash11[lagout] (locodash11@Pony-osmcfg.co.comcast.net)
[05:58:21] *** Quits: locodashie11 (locodash11@Taco.eating.Anthro.Batpony) (Ping timeout: 121 seconds)
[06:05:17] * Moonlightning sets the processor family.
[06:05:33] <Moonlightning> Intel Atom? I thought these were only in netbooks.
[06:05:39] *** Quits: Webster (Webster@Pony-jrej46.fios.verizon.net) (Quit: Leaving)
[06:06:30] *** djazz is now known as MangoBloom
[06:07:33] *** locodash11[lagout] is now known as locodashie11
[06:07:45] *** Vega is now known as Snoarin
[06:07:52] <Phase> netbooks, phones, tablets
[06:08:03] <Phase> i'm sure they're in a few 'desktops' somewhere
[06:08:19] <wolfyshy> you need that patch
[06:08:34] <wolfyshy> https://www.grsecurity.net/~spender/cpuopt.patch
[06:08:41] <wolfyshy> it applies cleanly to 4.2, not sure about 4.3
[06:09:10] <Moonlightning> which patch?
[06:09:25] <Snoarin> That patch
[06:10:11] <Moonlightning> Oh, that patch.
[06:10:19] <Moonlightning> Uh…this is 4.0.5
[06:12:23] <Moonlightning> also, Gentoo's version, which has some kernel patches
[06:13:08] <wolfyshy> oh
[06:13:11] <wolfyshy> gentoo already ships that
[06:13:51] * Moonlightning nods.
[06:14:01] <Moonlightning> I should be fine WRT it then.
[06:18:44] <Moonlightning> What's with /dev/cpu/*/msr?
[06:19:19] <Moonlightning> It sounds, more than anything, like a security fl—wait, we have /dev/kmem…
[06:21:18] *** Quits: Datguy (Datguy@lord.of.nreboot.c0m) (Ping timeout: 121 seconds)
[06:23:10] <Moonlightning> hmmm, transparent hugepage support?
[06:27:52] *** Joins: Datguy (Datguy@lord.of.nreboot.c0m)
[06:36:18] <Googie> Moonlightning: Going to configure grsecurity ?
[06:36:56] <Moonlightning> Googie: nope
[06:37:08] <Moonlightning> I gather that wolfyshy recommends that patch for all (most?) systems, though
[06:37:24] <Moonlightning> and she said Gentoo's patchset includes it, so
[06:37:51] <Moonlightning> If you're just joining us, I'm going through the entirety of the kernel menuconfig and messing with things. :D
[06:39:05] <Googie> Gentoo includes it, but you have to select it as part of your profile
[06:39:12] <Googie> It's not in the default Gentoo kernel
[06:39:26] <Moonlightning> Oh. o.o
[06:39:31] <Moonlightning> Remind me to do that, then
[06:39:55] <Moonlightning> hmmm, kexec support was already on
[06:40:40] <Moonlightning> also remind me to hack shutdown to kexec to something that wipes RAM before continuing to halt|reset|whatever
[06:41:47] <Moonlightning> why is RANDOMIZE_BASE recommended=n?
[06:45:58] <Googie> By the looks of it, the amount of protection it provides is... not that high apparently.
[06:46:31] <Moonlightning> yeah, only effectively eight or nine bits of entropy
[06:46:34] <wolfyshy> randomising base breaks kexec, iirc, so disable it.
[06:46:41] <Moonlightning> Still…it doesn't cost anything, y—oh, okay.
[06:47:19] <Moonlightning> Hmmm…a Random Internet User says that DDR3 modules are immune to coldboot attacks.
[06:47:38] <Moonlightning> (…why are they called coldboot attacks? They don't involve coldboots; they involve rapid powercycling. >.> )
[06:47:59] <Moonlightning> (which…is as far as you can get from a coldboot)
[06:49:46] *** Joins: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net)
[06:56:17] *** Joins: Cyan_Spark (Cyan_Spark@incidental.unicorn.Cyan_Spark)
[06:59:42] *** Quits: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net) (Ping timeout: 121 seconds)
[07:03:19] <Moonlightning> uh
[07:03:33] <Moonlightning> >> CONFIG_PM_TRACE_RTC
[07:03:41] <Moonlightning> > CAUTION: this option will cause your machine's real-time clock to be set to an invalid time after a resume.
[07:03:46] <Moonlightning> I feel like I should turn this off. :p
[07:08:03] *** Joins: Fallfeathers (Fallfeather@Pony-0pt6g2.bigpond.net.au)
[07:40:35] <Colgate> Moonlightning: I doubt DDR3 is immune to coldboot attacks
[07:41:23] <Moonlightning> Mmm/
[07:41:26] <Moonlightning> s:/:.:
[07:45:58] *** RedHelper is now known as Creeps|AFK
[08:29:35] *** Quits: Phase (Phase4@Pony-lu48ce.lnk.telstra.net) (Ping timeout: 121 seconds)
[08:33:09] <Moonlightning> How hard is it to optimize checks out from within a loop to before a loop, and is it done sometimes?
[08:33:10] <Moonlightning> Like, uh…
[08:39:00] <Colgate> like changing: for(i=0;i<5;i++) {if(a) foo(); else bar();} into if(a) for(i=0;i<5;i++) foo(); else for(i=0;i<5;i++) bar();?
[08:39:16] <Moonlightning> yeah, exactly.
[08:39:35] <Moonlightning> especially if `a` is `const`
[08:40:54] <HoneyDrops> I see a wonderful use case for function pointers there :3
[08:41:09] <Moonlightning> I've thought that before
[08:41:12] <HoneyDrops> Unrelatedly, " Today, some fears were allayed when it was announced that the government was not seeking to require software developers to build backdoors into their products. That said, the government said that companies should be able to decrypt 'targeted' data when required, and provide access to it."  How is that not a backdoor?
[08:41:15] <Moonlightning> but…it's a lot less clean
[08:41:31] <Moonlightning> And it doesn't work if it's not a simple identical-argument-list function call
[08:42:06] <Moonlightning> HoneyDrops: blah, how incredibly stupid
[08:42:12] <Moonlightning> Now, about that optimization
[08:43:11] <HoneyDrops> You can fudge it some with unions, should you just need to pass a single value, but it might be different things.  Alternatively the arg is just a void* and the function handles it as needed.
[08:44:00] * Googie immediately sees C++ templates.
[08:44:31] <Googie> But also, I suspect it might already be optimized by the compiler in some cases.
[08:44:48] <Moonlightning> A lot less cleaner if it's optimized into a branch to two different loops.
[08:44:56] <Moonlightning> s/less //  # where did that come from?
[08:45:06] <Googie> Premature optimization is the root of all evil/screws with the compiler's optimization
[08:48:06] <Colgate> indeed, keeping it in the single loop does make the code a lot cleaner
[08:48:29] <Colgate> well, maybe not a lot cleaner, depends ont he code obviously :P
[08:50:00] <Colgate> but unless it was performance critical code, I would go with the single loop even if the compiler didn't optimize it away
[08:53:09] <Googie> Also the branch predictor of the CPU would be able to handle it really well.
[08:55:06] <Colgate> yeah, it would see that "a" in that case doesn't change and just do it 5 times
[08:56:01] <Moonlightning> That's a great example, but I'm not only considering trivial loops and branch contents here.
[08:56:22] <Colgate> I figured as much :P
[08:56:25] <Moonlightning> basically the only simplifying thing here is that `a` is declared before the loop, and immutable
[09:01:02] <Googie> I'll be honest, it's one of those cases where I suspect that 99% of the time, it doesn't really matter, and the 1% of the time, the specifics /really really/ matter. So it's hard to speculate too much beforehand.
[09:10:36] <Moonlightning> Mmmm, point. It's, what, one or two extra instructions per iteration? Probably only to registers and L1 cache, right?
[09:10:48] <Moonlightning> On the other hoof…it's /one or two extra instructions per iteration./ :p
[09:11:45] <Moonlightning> Oh, what I really meant to ask
[09:12:19] <Moonlightning> What if the condition isn't just `a`? What if it's something like `a % 4 == 0`?
[09:12:33] <Moonlightning> still simple and unchanging, but…
[09:12:51] <Moonlightning> optimizer's smart enough to have that calculated once, yeah?
[09:13:14] <Googie> Yeah
[09:14:43] <Moonlightning> ^^
[09:15:44] *** Quits: Cyan_Spark (Cyan_Spark@incidental.unicorn.Cyan_Spark) (Quit: Sparks only last so long)
[09:16:25] <Colgate> unless you disable all the optimizations, yeah :P
[09:25:19] *** Quits: Crimson_Tail (Bluepon@Pony-hqf48k.cg80.k4gu.0151.2601.IP) (Quit: Ping timeout: -1 second)
[09:37:07] *** Joins: Phase (Phase4@Pony-u4lofk.internode.on.net)
[09:41:49] <johnsey> Moonlightning: the easiest way to find out is to write a test case, compile it and look at the disassembly. e.g. for (i = 0; i < 5; i++) { if (a%2) printf("yes\n"); else printf("no\n"); } ends up as http://pastebin.com/EfnYGdRr
[09:41:50] <PinkiePieBot> [ bb 05 00 00 00 mov ebx,0x5 83 ec 0c sub esp,0xc - Pastebin.com ]
[09:43:03] <HoneyDrops> <3
[09:44:05] <HoneyDrops> But why printf() and not puts()?
[09:44:21] * Moonlightning blinks.
[09:44:33] <Moonlightning> It optimized out the unusde branch! o.o
[09:44:37] <Moonlightning> unused *
[09:45:20] <johnsey> HoneyDrops: it becomes puts anyway 
[09:45:39] <HoneyDrops> Fair enough
[09:45:39] <johnsey> Moonlightning: that's compiler optimizations for you
[09:46:51] <Moonlightning> TIL of C puts()
[09:47:22] <Moonlightning> Now, how does /that/ work?
[09:47:34] <Moonlightning> A call to printf() becoming a single call to puts()?
[09:47:44] <Moonlightning> Is that just what printf() does if you pass it one argument?
[09:47:59] <johnsey> in most cases, manual micro-optimizations are a waste of time, your compiler will do it better anyway. the only problem is that sometimes, the compiler is too eager and you have to put up safeguards to keep it from optimizing things out
[09:48:23] <Rylee> well
[09:48:25] * Moonlightning puts an optimizing hat on Googie.
[09:48:40] <Rylee> puts is just printf("%s", $1)
[09:48:49] <Rylee> so it's a pretty simple optimization
[09:49:23] <Googie> The worst part is that manually doing micro-optimizations often makes it harder for the compiler to do its optimizations... which tend to matter more :P
[09:49:24] <Moonlightning> …but then why would you optimize a printf() call to a puts() call? 6_9
[09:49:42] <Googie> Because printf has a whole parser for the format string.
[09:49:50] <Phase> Moonlightning, compiler can optimize some standard library functions
[09:49:51] <Phase> ^ Googie
[09:50:08] <Phase> anything that's "%s\n" will become puts
[09:50:17] <Rylee> it's not *literally* defined as printf("%s", $1); that's just the equivalent. so if your call is as simple as that, then you can just puts it.
[09:50:32] <Moonlightning> Ah.
[09:52:23] <Phase> things like abs() are sometimes #define 'd to builtins, compiler may optimize those also
[09:52:46] <HoneyDrops> Though really, both printf and puts ultimately use write()
[09:52:53] <Phase> abs(-5) -> 5 at compile time
[09:52:55] <Moonlightning> well, if it's `#define`d, then the optimizer never sees it :P
[09:53:24] <Phase> Moonlightning, in this case the optimizer sees __builtin_abs(-5)
[09:54:27] <Moonlightning> ahh, not something like `#define abs(x) (x>0 ? x : -x)`
[09:54:33] <Moonlightning> something /like/ that that handles the edgecases
[09:55:34] <Phase> depends on the compiler
[09:56:08] <johnsey> Moonlightning: if you want to see what your code looks like after the preprocessing stage (and if it's gcc), take a look at -E
[09:56:23] * Moonlightning knew about -E
[09:57:40] <DJ-C0L7[EIT]> anypony ever mess with ignition systems?
[09:59:04] <Phase> Moonlightning, https://llvm.org/bugs/show_bug.cgi?id=20144 here's an example of it going wrong
[09:59:06] <PinkiePieBot> [ Bug 20144 – strcmp() from glibc 2.20 triggers -Warray-bounds when __OPTIMIZE__ is defined ]
[09:59:54] <Phase> you can see the absolutely insane #define that the glib guys think is faster
[10:01:05] <Moonlightning> damn o.o
[10:01:40] <Moonlightning> this kinda thing is why we need to switch from C :
[10:01:44] <Moonlightning> :p *
[10:02:30] * HoneyDrops gasps at Moonlightning's heresy!
[10:02:45] <Phase> Moonlightning, do you know you can do a compile-time strcmp in c++
[10:02:46] <Googie> Well, a lot of stuff like that couldn't be done in other languages. Period.
[10:02:57] <Moonlightning> Rust >3>
[10:03:02] <Googie> Optimized C is messy because optimization is messy
[10:03:14] <DJ-C0L7[EIT]> hea Moonlightning how hard is rust to pick up on? is it like objective C?
[10:03:26] <Phase> it needn't be, or at the very least you can confine the mess to generics
[10:03:38] <Phase> though you can do that with macros, so take your pick
[10:04:09] <Moonlightning> DJ-C0L7[EIT]: I dunno? I picked it up pretty easily
[10:04:20] <HoneyDrops> Moonlightning: C is still the best option for when you need direct hardware access, and not be tied to a specific CPU arch.
[10:04:23] <DJ-C0L7[EIT]> is it like Python?
[10:04:29] <Moonlightning> The borrowchecker is going to make your life hard for a bit until you gest used to it though
[10:04:46] <Googie> You can certainly confine the mess, but it has to be somewhere. Or at least instrumented somehow. C++'s template system can help there.
[10:04:52] <Moonlightning> HoneyDrops: No contest. But for general-purpose systems programming… :p
[10:05:22] <Googie> (Not instrumented... but defined I guess ?)
[10:05:52] <Phase> C++ can be used in many places C can, i've been considering porting a C project to C++
[10:06:01] <Phase> but the subtle differences are a problem
[10:06:26] <Phase> casting from void* in particular
[10:06:48] <HoneyDrops> I didn't care for C++, seems like an awkward space between C and higher level languages.
[10:06:57] <Moonlightning> What about it? ^2
[10:07:31] <Phase> HoneyDrops, you will hear pretty much the same from the guy what designed it
[10:07:41] <HoneyDrops> If I don't want to care what the hardware is exactly doing, I'll just jump all the way to something easy like sh, perl.  (if I ever get around to brushing up on lisp... I want to use that more)
[10:08:18] <Phase> C++ is C with a bunch of boiler plate moved to the type and templating systems
[10:08:34] <Phase> + a pile of complexity we can probably ignore
[10:08:36] <Phase> probably
[10:08:44] * Phase hasn't written a lot of C++
[10:09:31] <Phase> HoneyDrops, might like rust though, it's a clean new implementation and the type system is lifetime aware
[10:09:40] <AppleDash> I hate rust
[10:09:42] <Phase> so you get compile-time thread safety and all that good stuff
[10:10:22] <Moonlightning> AppleDash: why? :C
[10:10:47] <Googie> C++ is a very interesting language when you get down to it. And sometimes you do want something between C and Python. A lot of what it does is awkward, but it's mostly designed so that you can get the full power of C when needed while still having access to a lot of the nicer parts of higher level languages. It also gives a lot of rope to hang by though.
[10:11:00] <AppleDash> The syntax is weird, the whole borriwing thing is really really weird and hard for me to understand
[10:11:16] <Moonlightning> The syntax is weird?
[10:11:44] <Googie> There's been some really interesting discussion on the issues of how people approach C++. I'll be interested to see how the C++ core guidelines end up.
[10:11:44] <Phase> there's a bunch of extra syntax for lifetimes that pretty much no other language has
[10:11:45] <HoneyDrops> About the nicest things I can say about C++ is it isn't js or PHP.
[10:11:45] <Moonlightning> The ownership system is unconventional, yeah, but it gives you compile-time memory safety!
[10:11:49] * Phase hasn't really learned rust yet
[10:11:55] <AppleDash> The syntax is really weird, yes
[10:12:08] <AppleDash> I don't understand the big deal about memory safety TBH
[10:12:10] <Moonlightning> Oh, like singlequotes for lifetime specifiers?
[10:12:20] <Phase> AppleDash, lifetime safety, that extends past just memory
[10:12:22] <Moonlightning> AppleDash: ever had anythign segfault on you? /Anything?/ :p
[10:12:35] <AppleDash> If I type new or malloc(), after I am done that line I don't write anymore code until I've written delete or free()
[10:12:56] <Googie> HoneyDrops: "Within C++, there is a much smaller and cleaner language struggling to get out"
[10:12:59] <Moonlightning> yes, but this way you don't have to type /either/ of them!
[10:13:00] <Googie> That's basically the thing
[10:13:23] <Googie> There's a lot of crap around it, and so many terrible ways to screw up, but a lot of the new core stuff is really nice.
[10:13:43] <Moonlightning> Also, it prevents use-after-frees. Your symmetrical-allocation discipline doesn't help there. :P
[10:14:16] <AppleDash> Truth
[10:14:17] <Googie> That's basically the big current work that's going on now. Trying to figure out the best way to gently push people towards the nice parts of the language and away from the crap that sits between C and C++
[10:14:44] *** Joins: CrassyPaddles (test@Pony-9d0.enl.137.198.IP)
[10:15:14] <Phase> http://www.michaelthelin.se/wp-content/uploads/2014/02/book.jpg
[10:16:02] <Moonlightning> lawl
[10:16:02] <Phase> Googie, C++17 is brining some interesting stuff
[10:16:16] <Moonlightning> … ++johnsey for expiring paste
[10:16:21] <Googie> Yeah. Though I'm less interested in C++17 as I am the C++ core guidelines.
[10:16:44] <Moonlightning> Oh, cool, I can set the initial console screen size!
[10:16:53] <Moonlightning> …not that big a deal, actually; I'll leave it
[10:17:00] <Moonlightning> Where's the option for 256-bit color. :p
[10:17:14] <Googie> They're working on making guidelines that can be statically analyzed via tools to push people towards "Modern C++"
[10:17:23] * Phase is looking forward to concepts
[10:17:50] <Googie> The language's biggest problem is people that still... well, they write C and call it C++.
[10:18:22] <Moonlightning> concepts?
[10:18:32] <Phase> i'm not sure if i prefer that or the everything-as-a-method most C++ is
[10:18:43] <Phase> you can template functions, but people don't
[10:19:14] <Phase> Moonlightning, "specification and checking of constraints on template arguments"
[10:21:53] *** Quits: Phase (Phase4@Pony-u4lofk.internode.on.net) (Quit: Leaving)
[10:22:30] <AppleDash> Moonlightning: The fact that Rust seems to allow variable shadowing anywhere is very nice though
[10:22:36] *** Joins: Mike_Coltfield (Larscis@colt.in.the.rain)
[10:23:09] <AppleDash> In my programs I often declare something like int i; which I use as a loop counter and perhaps a return value for 5 unrelated things in the function, it often feels dirty to reuse that variabl;e for totally unrelated things
[10:23:48] <Moonlightning> :|
[10:24:10] <Moonlightning> single-character variable names are okay for C-style for loops and that's about it
[10:24:20] <AppleDash> If you think so
[10:25:59] <johnsey> yeah, should at least add an index to it, so that you can use a single character for everything :D int a1, a2, a3... :D
[10:26:14] <AppleDash> No
[10:26:32] <Googie> All my variables are kept in an array of void pointers.
[10:27:04] * Moonlightning sits over here with his clean, well-documented Rust. :p
[10:27:08] <HoneyDrops> #define SHOULD_BE_ENOUGH 100 ... int a[SHOULD_BE_ENOUGH];
[10:27:33] <CrassyPaddles> Hey guys, when you deny a claim X, do you believ X is false, or only that you don't believe it to be true?
[10:27:46] <Moonlightning> CrassyPaddles: No.
[10:27:56] <CrassyPaddles> no you
[10:27:58] *** Joins: Cyan_Spark (Cyan_Spark@incidental.unicorn.Cyan_Spark)
[10:28:03] <HoneyDrops> Mu?
[10:29:05] <Moonlightning> In seriousness…when you say /deny a claim X/, I think /assert that X is not necessarily true/
[10:29:42] <Moonlightning> (If you start fucking with me, again, by the way, I'm going to drop this. I've better conversations to have.)
[10:30:05] <CrassyPaddles> why would you ever think I'd do something like that?
[10:30:55] <Moonlightning> ('cos you did, very recently)
[10:31:06] <Moonlightning> (days in the past, but not many)
[10:31:08] <CrassyPaddles> what was the topic? 
[10:31:26] <Moonlightning> I find it hard to believe that you don't remember this.
[10:31:45] <CrassyPaddles> I have poor memory. I also have had many interesting conversations lately
[10:32:07] <CrassyPaddles> Anyways, I think we agree. To deny X is to not believe that X is true, and it's not to believe that X is not true.
[10:32:54] <Moonlightning> Not /necessarily./ You can simultaneously deny X and assert that it's false.
[10:34:40] <CrassyPaddles> " it's not to believe that X is not true." means "it's false that to deny X means to believe that X is false"
[10:34:53] <CrassyPaddles> We're in agreement again.
[10:34:54] <HoneyDrops> What do you mean "deny"?  I can assert a claim is true, false, or neither.
[10:35:23] <CrassyPaddles> HoneyDrops, that's precisely the issue here. What is meant by "I deny X"?
[10:35:45] <HoneyDrops> Avoid such wording then?
[10:35:51] <CrassyPaddles> http://dictionary.reference.com/browse/deny
[10:35:52] <PinkiePieBot> [ Deny | Define Deny at Dictionary.com ]
[10:36:26] <CrassyPaddles> probably best, b/c the word has both meanings 
[10:36:32] <CrassyPaddles> 'to state that (something declared or believed to be true) is not true"
[10:36:42] <CrassyPaddles> that would be to believe that X is false
[10:36:56] <CrassyPaddles> "to refuse to agree or accede to:"
[10:36:57] <HoneyDrops> Using def #1, "deny" is to assert "not true" that leaves an assertion it's false or neither true or false.
[10:37:24] <CrassyPaddles> using 1, to deny X is to believe X is false.
[10:37:43] <CrassyPaddles> using 2, to deny X is to not believe X is true.
[10:38:55] <CrassyPaddles> so, yeah, fuck "deny". Too ambiguous.
[10:39:02] <HoneyDrops> I would say #2 isn't intended to apply to this case.
[10:39:19] <CrassyPaddles> you can agree or not to claims as well.
[10:39:21] <Moonlightning> @.@
[10:39:34] <CrassyPaddles> If I agree to X, that means I believe X is true
[10:40:03] <Moonlightning> To restate, a denial is either an assertion that the clause being denied is not necessarily true, or an assertion that the clause being denied is strictly false
[10:40:15] <Moonlightning> no need to complicate this
[10:40:22] <HoneyDrops> ^
[10:41:21] <Moonlightning> On the subject of tech…how do I find the model of my SD card reader?
[10:41:30] <Moonlightning> can't find it in lspci
[10:43:09] <Moonlightning> https://gist.github.com/BlacklightShining/f19c325e9f47a649d835
[10:43:12] <PinkiePieBot> [ lspci.out · GitHub ]
[10:43:35] <CrassyPaddles> what's it mean to assert a claim is not NECESSARILY true?
[10:44:03] <HoneyDrops> Also, don't use a standard english dictionary when dealing with formal arguments.  Generally vernacular usage is too vague (as the prior conversation illustrates).
[10:44:08] <Moonlightning> That it has not been adequately proved to be true.
[10:44:13] *** Joins: LegionRed (LegionRed@The.DragonHorse.DraconisEquus)
[10:44:44] <CrassyPaddles> So it means to assert one's disbelief then?
[10:45:05] <Moonlightning> Without asserting that the claim is definitely false, yes.
[10:45:51] <CrassyPaddles> then we are all in agreement. Thus "Deny" is a shitty ambiguous term, because the distinction between belief and disbelief is a crucial one.
[10:46:14] <CrassyPaddles> It is a distinction that is very relevant to make in many different fields of inquiry.
[10:46:51] <Moonlightning> You could use it to mean assert-not-necessarily
[10:47:01] <Moonlightning> And use /deny and assert false/ or something for the other meaning
[10:48:28] *** Joins: Phase (Phase4@Pony-u4lofk.internode.on.net)
[10:50:22] <HoneyDrops> CrassyPaddles: this problem is solved in formal logic.  It uses it's own jargon and well-defined definitions of words.   Should a field require a specificity greater than standard english, it will define the framework for that.  eg: Law.
[10:50:29] <HoneyDrops> s/it's/its/
[10:50:30] <CrassyPaddles> "I assert that X is false" is much better to mean "I believe X is false"
[10:51:25] <CrassyPaddles> HoneyDrops, I'm not familiar with any formal logics that deal with matters of belief.
[10:52:08] <Moonlightning> well, you could use it as a protocol for debate
[10:52:14] <Moonlightning> though I think it'd be rather cumbersome
[10:52:17] <HoneyDrops> Because belief doesn't really matter?
[10:53:07] <Phase> Googie, https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md
[10:53:08] <PinkiePieBot> [ CppCoreGuidelines/CppCoreGuidelines.md at master · isocpp/CppCoreGuidelines · GitHub ]
[10:53:41] <Googie> Phase: Yeah. They're still in early development though
[10:54:26] <Googie> The document is insanely long, but they plan to make it work via tooling
[11:00:09] <Moonlightning> Is CONFIG_DMADEVICES…/safe?/ >.>
[11:00:25] <Moonlightning> no, right?
[11:00:40] <Moonlightning> wasn't there like an alternative to it that balanced performance with sane security?
[11:00:40] <Phase> Moonlightning, c++ concepts as i understand them, you could create struct Threadsafe {}, then check for inheritance of that class at your thread boundaries
[11:00:55] <Phase> rust traits can do something similar i think
[11:01:28] <Phase> Moonlightning, i don't see what the issue with it is?
[11:01:37] <Moonlightning> Rust has marker traits indicating whether instances of a type can be safely passed to different threads?
[11:01:42] <Moonlightning> `Send`, IIRC
[11:01:47] <Phase> yeah
[11:01:51] <Phase> C++ concepts can be used the same way
[11:02:39] <Moonlightning> Phase: plug in DMA device -> device dumps system memory to self -> device maybe also fucks with the kernel to install some rootkit -> ??? -> profit
[11:02:51] <Phase> ah, no that's not DMADEVICES
[11:03:03] <Moonlightning> but that's what DMA is :P
[11:03:09] <Phase> that's things like firewire granting physical memory dma access by default
[11:03:25] <Phase> it has the ability regardless of CONFIG_DMADEVICES
[11:03:31] <Moonlightning> what other kind of //direct// memory access is there?
[11:03:39] <Moonlightning> :|
[11:03:54] <Phase> DMA may act on virtual memory
[11:04:10] <Phase> 'direct' means it happens without the cpu
[11:05:00] * Moonlightning just turns the damn thing off ;p
[11:05:05] <Moonlightning> all I have is USB 3, anyway, so
[11:05:14] <Phase> which doesn't have DMA :P
[11:05:27] <Moonlightning> yeah, exactly.
[11:05:50] <Phase> there's no real reason to disable it
[11:05:54] <Moonlightning> oh, here we are. IOMMU hardware support
[11:06:27] <Phase> IOMMU can fix the problem iirc
[11:06:36] <Moonlightning> yeah, that sounds right
[11:06:45] <Moonlightning> what does that mean in terms of kernel config though :p
[11:06:51] <Phase> not a clue
[11:15:10] <Moonlightning> hmmmmmm
[11:15:27] <Moonlightning> does my /boot partition being vfat mean I need baked-in kernel support for vfat? >.>
[11:19:08] <johnsey> no
[11:19:27] <Moonlightning> Good.
[11:19:28] <Phase> your bootloader needs vfat support, initrd doesn't need to touch /boot
[11:21:36] <Moonlightning> why am I…
[11:21:40] <Moonlightning> grub is a bootloader, right?
[11:21:47] <Phase> yeah
[11:24:39] *** Quits: Cyan_Spark (Cyan_Spark@incidental.unicorn.Cyan_Spark) (Quit: Sparks only last so long)
[11:25:52] <Moonlightning> I think it's safe to assume grub has vfat support :P
[11:30:26] <Moonlightning> …lol
[11:30:56] <Moonlightning> if you turn off support for the filesystem that /boot is, and you install that kernel and reboot, you won't be able to undo it from the running system
[11:31:33] <Moonlightning> on a //completely unrelated// note, where did I put that boot disk…
[11:32:49] <Moonlightning> *nix filesystems (in particular, ext and btrfs) don't need native language support, right?
[11:39:25] <CrassyPaddles> what are your opinions of Schrodinger's Cat?
[11:40:22] *** Quits: Phase (Phase4@Pony-u4lofk.internode.on.net) (Connection closed)
[11:42:27] <johnsey> CrassyPaddles: that it apparently lacks native language support
[11:42:27] <johnsey> Moonlightning: if you want to undo it from the running system, build vfat support as a module and load it
[11:42:38] *** Joins: Phase (Phase4@Pony-u4lofk.internode.on.net)
[11:43:17] <DJ-C0L7[EIT]> it seems like vehicles i build tend to run better when tuned slightly rich and with the timing turned up
[11:43:22] <DJ-C0L7[EIT]> wrong window
[11:48:19] <CrassyPaddles> johnsey, what
[11:50:01] <HoneyDrops> What is there to have an opinion of?  Aside from the fact that it is a somewhat hamfisted attempt to apply a QM phenomenon to a macroscopic system?
[11:50:33] <CrassyPaddles> I think the scenario is impossible
[11:50:37] <HoneyDrops> QM only seemws weird because we're biased by the normal scales we deal with.
[11:52:29] <HoneyDrops> The specific experiment with a cat and radioisotopes wouldn't go like the though experiment, as you would have interactions in any actual experimental setup.  However, the basic principle of superposistion is well verified.
[11:53:39] <Moonlightning> Mmkay, let's see how this goes.
[11:54:36] <HoneyDrops> The equations predict the behaviours we see, to the accuracy we can currently measure and under the conditions we've encountered/are able to create.  
[11:55:18] <CrassyPaddles> The paradox assumes that the current understanding of physics holds true. Then there's something in the laws of physics that makes it physically impossible to create a setup where the bomb explodes and doesn't upon receiving two different inputs.
[11:57:59] <HoneyDrops> You could, quite easily, crate the setup.  However, it would take a lot of cats to verify the statistical distribution.  Also the interpration of as-to-be observed states is beyond the scope of the mathematical framework.
[11:58:08] <CrassyPaddles> no you can't
[11:58:12] <CrassyPaddles> it would be physically impossible
[11:58:13] *** Quits: Compu (compu@snuggly.filly) (Ping timeout: 121 seconds)
[11:58:39] *** Joins: Compu (compu@snuggly.filly)
[11:58:40] <CrassyPaddles> Remove quantum weirdness from the paradox, and replace it with the wires connected to two buttons, one of which if depressed alone, causes the bomb to explode, and the other, if depressed alone, causes it not to explode. What happens if I press both of them together?
[11:59:04] <CrassyPaddles> Such an option is not defined, and we would not answer "it causes the bomb to explode and to not explode."
[11:59:55] <CrassyPaddles> the cat paradox does not define what will happen when the bomb receives to competing signals. That is the fatal flaw.
[12:00:05] <HoneyDrops> Do you understand what a wavefunction is?  Eigenstates? 
[12:00:42] <CrassyPaddles> Is it necessary for the understanding of the paradox? The idea is that the bomb receives two different signals at once.
[12:02:25] <HoneyDrops> No, the bomb (or in most setups the poison) is in a superposistion of states.
[12:03:02] <CrassyPaddles> sure
[12:03:11] <CrassyPaddles> basically, state one entails the bomb explodes
[12:03:20] <CrassyPaddles> state 2 entails the bomb doesn't
[12:03:23] <Moonlightning> What I don't get is how the quantum superposition of the radioactive particle propogates to the classical poison. :P
[12:03:47] <Moonlightning> regular objects don't have superpositions, do they?
[12:04:16] <CrassyPaddles> HoneyDrops, however, those two statements are LOGICALLY CONTRADICTORY with "state one and state two are the case"
[12:04:28] <CrassyPaddles> you're going to have to toss some of them out.
[12:05:34] <CrassyPaddles> and there's a bunch of evidence for particles being in superposition of states.
[12:05:41] <HoneyDrops> Moonlightning: it an actual experiment, that is the "problem" as you'd have to isolate it from interactions.
[12:05:52] <Moonlightning> Huh?
[12:06:32] <HoneyDrops> ( it is 7am and I'm still awake, remind me later and I'll explain)
[12:06:57] <CrassyPaddles> so, the problem lies with the hypothetical setup of the paradox, namely, "If particle X is in state 1, bomb explodes", and "If particle X is in state 2, bomb doesn't".
[12:08:04] <CrassyPaddles> So if you're going to suppose X is in states 2 and 1 and that if X is in state 1, bomb explodes, it is LOGICALLY IMPOSSIBLE for the bomb to not explode if X is in state 2.
[12:08:58] <CrassyPaddles> and bam, I've just resolved Schrodinger's cat. there's nothign wrong with QM, or it's interpretations.
[12:09:19] <CrassyPaddles> the paradox ITSELF is flawed. A contradiction is assumed in its very premises.
[12:09:56] <CrassyPaddles> where's my Nobel Prize?
[12:16:12] <CrassyPaddles> Moonlightning, HoneyDrops, the specifics don't even matter in this case, because Schrodinger's set up a scenario that is impossible in the broadest sense of the word, a logically impossible scenario.
[12:17:42] <Compu> CrassyPaddles: does not compute!!
[12:19:00] <CrassyPaddles> is Compu a bot or something?
[12:19:49] <Kinsley> How rude
[12:20:08] <Compu> *flops at CrassyPaddles*
[12:26:03] *** Quits: DJ-C0L7[EIT] (IceChat77@DJ-C0L7.EIT.LLC) (Quit: "be back later")
[12:35:31] * Moonlightning politely offers Kinsley a Moonlightning.
[12:36:15] * Kinsley stares blankly
[12:37:08] <Moonlightning> o.i
[12:37:12] <Moonlightning> o.o
[12:38:39] <Kinsley> What... what do I do?
[12:56:06] <Compu> *clings to a Kinsley*
[12:59:57] *** Seoson|BNC is now known as Seoson
[13:06:08] <RainbowHacks> o.o
[13:06:19] <RainbowHacks> Kinsley, i would suggest groping the butt, to start.
[13:07:33] *** Quits: LegionRed (LegionRed@The.DragonHorse.DraconisEquus) (Quit: Worst quit message, ever.)
[13:18:58] *** Quits: Fallfeathers (Fallfeather@Pony-0pt6g2.bigpond.net.au) (Connection closed)
[13:59:25] *** Quits: Asoka_White (Asoka@Pony-f7gf90.net-htp.de) (Ping timeout: 121 seconds)
[14:00:44] *** Joins: Asoka (Asoka@Pony-f7gf90.net-htp.de)
[14:06:46] *** Joins: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net)
[14:14:31] *** Joins: MisterSkids (ejd@Pony-fej07d.res.rr.com)
[14:24:02] *** Quits: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net) (Ping timeout: 121 seconds)
[14:57:58] *** Joins: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net)
[15:12:30] *** Quits: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net) (Ping timeout: 121 seconds)
[15:23:15] *** Quits: MisterSkids (ejd@Pony-fej07d.res.rr.com) (Ping timeout: 121 seconds)
[15:45:43] *** Joins: MisterSkids (ejd@Pony-fej07d.res.rr.com)
[15:59:58] *** Quits: locodashie11 (locodash11@Taco.eating.Anthro.Batpony) (Ping timeout: 121 seconds)
[16:03:43] *** Quits: ShivalWolf (ShivalWolf@BigMac.is.a.Coltcuddler.org) (Ping timeout: 121 seconds)
[16:11:01] *** Joins: ShivalWolf (ShivalWolf@2400:d400:9:7375:abcd::2)
[16:16:00] *** Quits: ShivalWolf (ShivalWolf@2400:d400:9:7375:abcd::2) (Killed (NickServ (GHOST command used by Shival|Away!ShivalWolf@BigMac.is.a.Coltcuddler.org)))
[16:16:04] *** Joins: Shival|Away (ShivalWolf@BigMac.is.a.Coltcuddler.org)
[16:18:19] *** Quits: Shival|Away (ShivalWolf@BigMac.is.a.Coltcuddler.org) (Connection closed)
[16:20:20] *** Joins: GumballCrash (GumballCras@0.to.pony.10secondsflat)
[16:22:29] *** Quits: Gumball (GumballCras@0.to.pony.10secondsflat) (Ping timeout: 121 seconds)
[16:23:10] *** Joins: ShivalWolf (ShivalWolf@BigMac.is.a.Coltcuddler.org)
[16:23:53] *** Quits: ShivalWolf (ShivalWolf@BigMac.is.a.Coltcuddler.org) (A TLS packet with unexpected length was received.)
[16:26:37] *** Joins: ShivalWolf (ShivalWolf@2400:d400:9:7375:abcd::2)
[16:31:34] *** Joins: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net)
[17:31:27] *** Quits: CrassyPaddles (test@Pony-9d0.enl.137.198.IP) (Ping timeout: 121 seconds)
[17:32:04] *** Joins: Crimson_Tail (Bluepon@Pony-pb2p83.cg80.k4gu.0151.2601.IP)
[17:44:05] <HoneyDrops> Moonlightning: Macroscopic objects have a large number of internal states.  At non cryogenic temps self-interaction (not to mention any env that isn't a hard vacuum) you can't maintain a suprerposistion because you can't isolate the system to maintain an "unobserved" status.
[17:46:22] *** Snoarin is now known as Gigabit
[17:51:22] *** Joins: Midnight_Tinker (MidnightTin@Pony-5qttkj.dc.cox.net)
[18:02:52] <DataByte> HAHAHAHA http://imgur.com/gallery/UyvXkOc
[18:02:52] <PinkiePieBot> [ I don't feel comfortable charging my phone right now - Imgur ]
[18:04:38] <Moonlightning> Aha.
[18:06:23] <Caerdwyn> lol'd at the "y'all go outside"
[18:46:06] *** Creeps|AFK is now known as RedHelper
[18:52:25] *** Quits: quindo (Quindo@Pony-ushc41.mssnks.sbcglobal.net) (Ping timeout: 121 seconds)
[18:52:58] *** Joins: quindo (Quindo@Pony-ushc41.mssnks.sbcglobal.net)
[18:53:12] *** quindo is now known as Quindo
[18:56:33] *** Joins: CrassyPaddles (test@Pony-9d0.enl.137.198.IP)
[19:22:45] <Phase> <CrassyPaddles> the paradox ITSELF is flawed < by my understanding: the paradox specifies a box who's contents cannot be observed from the outside. the contents exploding would have to be contained by that box
[19:23:58] <CrassyPaddles> I've asked around, and my understanding is that Schrod came up with the SC thought experiment, to refute the idea that you could apply QM to macro, cat sized objects
[19:24:21] <CrassyPaddles> by demonstrating that such an application allows for blatant logical contradictions.
[19:24:32] <Phase> huh
[19:29:56] <CrassyPaddles> However, I think it fails to do even that
[19:30:16] <CrassyPaddles> It does not prove that QM can't be applied to macro objects
[19:41:26] *** zz_CyberJacob is now known as CyberJacob
[19:43:22] *** Quits: GumballCrash (GumballCras@0.to.pony.10secondsflat) (Ping timeout: 121 seconds)
[19:46:00] <Moonlightning> All you need is HoneyDrops' line up demonstrate that QM fails for macro
[19:46:13] <Moonlightning> or, fail *
[19:50:51] *** Flowheart is now known as Starburn
[20:01:03] *** Quits: Alcoholicorn (Alcoholicor@Pony-55oq0s.pool.hargray.net) (Ping timeout: 121 seconds)
[20:07:44] *** Quits: Phase (Phase4@Pony-u4lofk.internode.on.net) (Ping timeout: 121 seconds)
[20:08:18] <Quindo> Day 2 on windows 10 and so far it is behaving...
[20:08:40] <Quindo> However, this was an unused machine that upgraded to it... Not an exsisting workstation upgrade
[20:50:52] *** Quits: CrassyPaddles (test@Pony-9d0.enl.137.198.IP) (Ping timeout: 121 seconds)
[20:55:44] *** Joins: CrassyPaddles (test@Pony-9d0.enl.137.198.IP)
[21:07:54] *** Joins: Phase (Phase4@Pony-lu48ce.lnk.telstra.net)
[21:10:06] *** Quits: CrassyPaddles (test@Pony-9d0.enl.137.198.IP) (Ping timeout: 121 seconds)
[21:11:51] *** Joins: CrassyPaddles (test@Pony-9d0.enl.137.198.IP)
[21:26:53] <Moonlightning> I think I wanna try SELinux. o.o
[21:27:19] <Moonlightning> …actually…wonder if it'd be better to spin up a VPS to try it on.
[21:29:10] <JustAberrant> selinux is horrible and arcane and breaks everything and required rediculous effort for minimal gains.. you'll probably love it ;p
[21:29:15] *** Joins: Gumball (GumballCras@0.to.pony.10secondsflat)
[21:30:14] <johnsey> what JustAberrant said
[21:30:49] <Quindo> XD
[21:31:11] <johnsey> it works alright if you use a distro that's designed for it but make sure you don't stray from the distro way to do things
[21:33:13] <Moonlightning> dammit, I //really// need a testing laptop. :P
[21:34:11] <Moonlightning> I take it none of the common distros are designed for it
[21:37:24] <Colgate> centos
[21:41:49] <johnsey> or SL
[21:44:32] <Moonlightning> SL?
[21:44:40] <johnsey> scientific linux
[21:46:21] <Moonlightning> Mmm.
[21:47:27] <Moonlightning> (WIkipedia got their table cells coloring backwards)
[21:47:39] <Moonlightning> (In the /systemd enabled by default/ column, it should be red for yes and green for no >.> )
[21:48:43] *** Quits: MisterSkids (ejd@Pony-fej07d.res.rr.com) (Connection closed)
[21:50:15] <johnsey> are you surprised? it's based on RHEL
[21:51:15] <johnsey> so pretty much source of systemd
[21:52:03] <Moonlightning> Hmm?
[21:52:44] <johnsey> poettering works for red hat
[21:54:16] <johnsey> they were not the first to adopt it as default but there's been a bunch of conspiracy theories about red hat's involvement in the adoption of systemd in debian
[21:54:40] <Moonlightning> :|
[21:56:09] *** Joins: MisterSkids (ejd@Pony-fej07d.res.rr.com)
[22:04:13] <Phase> Moonlightning, fedora comes with a default policy and some tools, runs your user mostly unconfined
[22:18:46] *** Quits: Quindo (Quindo@Pony-ushc41.mssnks.sbcglobal.net) (Ping timeout: 121 seconds)
[22:18:59] *** Joins: quindo (Quindo@Pony-ushc41.mssnks.sbcglobal.net)
[22:26:09] *** Quits: Gumball (GumballCras@0.to.pony.10secondsflat) (Ping timeout: 121 seconds)
[22:28:15] *** Joins: bache (bache@Pony-0qa.2dv.248.50.IP)
[22:28:26] *** Quits: Compu (compu@snuggly.filly) (A TLS packet with unexpected length was received.)
[22:33:43] *** Joins: Gumball (GumballCras@0.to.pony.10secondsflat)
[22:47:25] <Sukasa> I..  wow
[22:47:31] <Sukasa> You see the damnest things in HVAC
[22:47:54] <Sukasa> We had a client who was really uptight about having a really good UPS..  19" rackmount, 2 extra battery packs, the works
[22:48:08] <Sukasa> estimated battery life..  10 minutes; run time
[22:48:41] <Sukasa> turns out they're serious about their HVAC systems never shutting down before the generator can kick in...  boilers, HVAC control, and pumps are all running off this UPS @_@
[22:49:37] <Sukasa> and now, being unhappy with where it's installed
[22:49:50] <Sukasa> they want this UPS, and its battery packs, to be hung from the ceiling
[22:59:46] *** Joins: Compu (compu@snuggly.filly)
[23:00:08] <Phase> that sounds amazing
[23:01:06] <Colgate> a UPS hanging from the ceiling?
[23:01:10] <Colgate> that sounds like a bad idea
[23:02:01] <johnsey> probably taped to the ceiling
[23:09:05] *** CyberJacob is now known as zz_CyberJacob
[23:09:21] <Phase> put spikes on it
[23:10:55] *** zz_CyberJacob is now known as CyberJacob
[23:18:12] <quindo> What about on a shelf mounted to the wall?  Or mounted from the ceiling...
[23:18:27] <quindo> I can see that being a thing if flooding is an issue.
[23:20:09] <Sukasa> we don't know why they want it hanging from the ceiling
[23:20:22] <Sukasa> also, it's a T-bar ceiling
[23:20:30] <Sukasa> but we're probably going to say no
[23:20:55] <Sukasa> Johnsey: no, not taped.  Hanging.  Low enough that they can still access it.
[23:22:22] *** Quits: Crimson_Tail (Bluepon@Pony-pb2p83.cg80.k4gu.0151.2601.IP) (Quit: Ping timeout: -1 second)
[23:22:28] *** Joins: Gladiolus (uid110916@the.truth.is.out.there)
[23:23:38] <Sukasa> I still can't understand what the hell kind of load is on that thing that it will last for <10min with two external battery packs hooked up
[23:24:39] *** Joins: Crimson_Tail (Bluepon@Pony-909g8q.cg80.k4gu.0151.2601.IP)
[23:28:28] <JustAberrant> hvac on ups.. nice
[23:37:16] *** Quits: CrassyPaddles (test@Pony-9d0.enl.137.198.IP) (Ping timeout: 121 seconds)
[23:41:12] *** Joins: Fallfeathers (Fallfeather@Pony-ils488.bigpond.net.au)
[23:42:31] <Sukasa> and of course running right next to the UPS is a teck cable the size of my arm
[23:50:10] <Gladiolus> man
[23:50:18] <Gladiolus> i must install windows 98 at least once a month
[23:50:20] <Gladiolus> what is wrong with me
[23:54:50] *** Quits: Datalink__ (Datalink@Datalink) (Quit: Datalink offline)
[23:59:50] <ShivalWolf> tsk tsk tsk symantec - https://googleonlinesecurity.blogspot.com.au/2015/10/sustaining-digital-certificate-security.html
[23:59:51] <PinkiePieBot> [ Google Online Security Blog: Sustaining Digital Certificate Security ]
