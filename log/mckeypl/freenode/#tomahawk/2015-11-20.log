[00:32:07] <domme> TheOneRing: what vlc version?
[00:49:30] *** Joins: domme_ (~domme@ip-178-200-154-13.hsi07.unitymediagroup.de)
[00:49:33] *** Quits: domme (~domme@ip-178-200-154-13.hsi07.unitymediagroup.de) (Ping timeout: 244 seconds)
[00:50:35] <jherskowitz> TheOneRing: I was wondering that too
[00:50:44] <jherskowitz> haven’t had a chance to play with colors
[00:50:55] <jherskowitz> but I think white is probably a good start
[01:24:18] *** Joins: McKey (~McK@irc.antyklay.pl)
[01:24:18] *** Server sets mode: +gnt 
[01:30:25] *** Joins: lrvick (~weechat_u@192.99.67.111)
[01:31:12] <lrvick> so am i missing how to play all songs by an artist? 
[01:32:43] <lrvick> short of manually creating a playlist and manually adding each album
[01:33:13] <lrvick> seems like several steps
[01:34:24] <theli_ua> I think that is correct
[01:35:07] <theli_ua> you can also rightclick artist in collection view and 'add to queue' I guess
[01:35:20] <lrvick> android
[01:35:29] <theli_ua> oh, no idea
[01:35:47] <theli_ua> MrMaffen should know that
[01:39:46] *** Quits: pinheiro (~pinheiro@2001:8a0:f884:a101:92b1:1cff:fe77:db0d) (Quit: Konversation terminated!)
[01:43:49] <MrMaffen> lrvick: currently you can only play all top-hits by a certain artist with one click. if you want to play all tracks you have to add those to your queue. you don't have to manually create a playlist though
[02:06:51] *** Quits: HorusHorrendus (~horrendus@80.110.135.155) (Quit: Leaving.)
[02:37:13] <lrvick> Most of my artists are not well known enough to have top hits. The result is I have to manually add each album to queue to listen to that artist
[02:37:23] <lrvick> Which is a pain
[02:37:52] <lrvick> I love FOSS but I must admit I greatly miss Google plays "shuffle artist" button
[02:38:11] <lrvick> One click and back in pocket
[02:54:04] *** Quits: jamesaxl (~jamesaxl@41.140.43.71) (Ping timeout: 265 seconds)
[02:54:26] *** Joins: jamesaxl (~jamesaxl@41.249.5.39)
[04:01:16] *** Quits: jturney1 (~jon@host86-141-129-50.range86-141.btcentralplus.com) (Read error: Connection reset by peer)
[04:21:50] *** Quits: domme_ (~domme@ip-178-200-154-13.hsi07.unitymediagroup.de) (Ping timeout: 276 seconds)
[04:27:42] *** Joins: soee_ (~soee@afcr225.neoplus.adsl.tpnet.pl)
[04:28:23] *** Quits: soee (~soee@agup203.neoplus.adsl.tpnet.pl) (Ping timeout: 264 seconds)
[07:01:18] *** Quits: jamesaxl (~jamesaxl@41.249.5.39) (Ping timeout: 252 seconds)
[08:24:40] *** Joins: arkhi (~fabien@180.167.3.61)
[09:29:31] *** Joins: meaning (~meaning@182.149-242-81.adsl-dyn.isp.belgacom.be)
[10:35:42] *** Joins: HorusHorrendus (~horrendus@80.110.135.155)
[10:42:37] *** Quits: scrollback (scrollback@gateway/web/scrollback.io/x-xquhjctkkimrnrao) (Remote host closed the connection)
[10:44:52] *** Joins: 7YUAAC59K (scrollback@gateway/web/scrollback.io/x-ytvhcvdixzsajyhb)
[11:06:13] *** Joins: ssam2 (~ssam2@82-70-136-246.dsl.in-addr.zen.co.uk)
[11:40:48] *** Quits: meaning (~meaning@182.149-242-81.adsl-dyn.isp.belgacom.be) (Quit: My Mac has gone to sleep. ZZZzzz…)
[11:48:09] *** Joins: meaning (~meaning@182.149-242-81.adsl-dyn.isp.belgacom.be)
[11:49:11] *** Quits: HorusHorrendus (~horrendus@80.110.135.155) (Quit: Leaving.)
[12:01:46] *** Joins: Kalendium (~davidgasq@37.130.151.18.radiocable.net)
[12:01:46] *** Quits: Kalendium (~davidgasq@37.130.151.18.radiocable.net) (Changing host)
[12:01:46] *** Joins: Kalendium (~davidgasq@unaffiliated/kalendium)
[12:01:57] <Kalendium> Hi!
[12:02:18] <Kalendium> Any clue when the next tomahawk will be on the ubuntu PPA?
[12:02:19] <Kalendium> :)
[12:50:06] *** Joins: jturney (~jon@host86-141-129-50.range86-141.btcentralplus.com)
[13:06:36] *** Joins: domme_ (~domme@ip-178-200-154-13.hsi07.unitymediagroup.de)
[13:09:50] *** Quits: meaning (~meaning@182.149-242-81.adsl-dyn.isp.belgacom.be) (Quit: My Mac has gone to sleep. ZZZzzz…)
[13:12:31] *** Quits: arkhi (~fabien@180.167.3.61) (Quit: Leaving.)
[14:19:20] *** Joins: meaning (~meaning@182.149-242-81.adsl-dyn.isp.belgacom.be)
[14:26:36] <muesli> Kalendium: define the next? :)
[14:26:46] <muesli> Kalendium: the latest stable is in the ppa for various ubuntus
[15:01:46] *** Joins: eaterof (~eater@eoc.io)
[15:03:19] *** Quits: eater (~eater@eoc.io) (Ping timeout: 240 seconds)
[15:03:19] <Kalendium> muesli: I'm looking forward to be able to shuffle my gmusic library
[15:10:18] <jherskowitz> TheOneRing: or we could bring in the Tomahawk red… https://www.dropbox.com/s/vzbr40rkwsqscui/Screenshot%202015-11-20%2009.09.59.png?dl=0
[15:10:21] <tomabee> [ Screenshot 2015-11-20 09.09.59.png | www.dropbox.com | https://photos-6.dropbox.com/t/2/AADFHOo4dv4zztzcVOqphmZuFD5jTfmWrswWmjcdxgnzMw/12/986425/png/1024x768/2/_/0/4/Screenshot%202015-11-20%2009.09.59.png/CLmaPCABIAIgBygBKAIoBCgH/vzbr40rkwsqscui/AAAfzM3YyBaijQCZZ6_r7R9ma/Screenshot%202015-11-20%2009.09.59.png ]
[15:13:23] <TheOneRing> jherskowitz: uh yes looks great
[15:13:25] <TheOneRing> thanks
[15:13:38] <jherskowitz> np
[15:13:56] <jherskowitz> the track font may need to be a bit heavier
[15:14:08] <jherskowitz> but feel free to experiment :)
[15:31:32] <jherskowitz> domme_: theli_ua I get errors trying to drop iTunes links too “error fetching iTunes information from the network”. What does that mean?
[15:54:37] <domme_> jherskowitz: i don't know :-)
[16:02:50] *** Quits: TheOneRing (~quassel@amarok/developer/TheOneRing) (Ping timeout: 246 seconds)
[16:05:43] *** Joins: TheOneRing (~quassel@amarok/developer/TheOneRing)
[16:09:54] <muesli> error in ITunesParser.cpp (stating the obvious)
[16:09:54] <muesli> checking
[16:10:52] <muesli> ok, requests data straight from apple.com
[16:10:57] <muesli> either that's down or they've changed their api
[16:11:04] <muesli> "api"
[16:14:49] *** Quits: meaning (~meaning@182.149-242-81.adsl-dyn.isp.belgacom.be) (Quit: My Mac has gone to sleep. ZZZzzz…)
[16:32:17] *** Quits: total1ty_ (~quassel@ipbcc36ea9.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[16:39:36] <domme_> jherskowitz: i like the tomahawk red in the preview thing
[16:39:40] <domme_> TheOneRing: ^
[16:39:46] <domme_> muesli: ping
[16:40:19] <muesli> pong-ish
[16:40:41] <muesli> Kalendium: ah :)
[16:41:24] <domme_> muesli: when are you back with a little time to discuss something potentially controversial? :-D
[16:41:39] <muesli> domme_: well, start it :P
[16:41:46] <domme_> muesli: alright. so... 
[16:41:52] <muesli> will just shower and move to the lab in a bit
[16:41:58] <domme_> collections provide tracks
[16:42:42] <domme_> my thesis: they should be able to do so directly, so a javascript resolver should not need to wire up its collection and return search results from the service and from the collection at once
[16:44:06] <muesli> then we'd need to index those collections
[16:44:18] <domme_> either we would need to make the collection register its own resolver.. or we would need to make the pipeline (and possibly (a lot of) other things) handle collections as well.. (or a common baseclass of collection and resolver - meet ResultProvider)
[16:44:28] <domme_> muesli: index?
[16:45:17] <muesli> maybe i misunderstand what you're saying
[16:45:26] <muesli> are you talking about searching resolver-collections?
[16:45:27] <domme_> ah, probably
[16:45:35] <domme_> sooo.. first step:
[16:47:24] <domme_> think of e.g. gmusic. with all access it has a streaming service but you can also stream your own tracks. so there's potentially two sources for a result. right now the search() / resolver() methods need to handle their own collections. (it's not done in the resolver directly right now, but in some wrapper method in javascript)
[16:47:52] <domme_> sooo.. in c++ we're calling resolve() on the resolver, but we get results from the resolver and the collection
[16:47:56] <domme_> which is a bit ... odd
[16:48:20] <domme_> i'm argueing we should ask resolver and collection separately for their respective results
[16:48:22] <muesli> so i kinda understood actually
[16:48:25] <domme_> yep
[16:48:31] <domme_> exactly, yours is step 2
[16:48:38] <muesli> hence why i'm saying: then we'd need to index (lucene) the resolver's collection
[16:48:40] <domme_> MrMaffen already does that on android
[16:48:42] <muesli> so we can search it
[16:48:55] <muesli> the problem comes with resolvers that can't provide a flat collection tho
[16:49:08] <domme_> not really :-)
[16:49:14] <domme_> step 2 is a shortcut so to speak
[16:49:30] <domme_> an optional one
[16:49:52] <muesli> ok, not really high up my prio list then, tho
[16:49:52] <domme_> sooo.. actually we're asking the collection javascript object for its results.. 
[16:50:12] <domme_> i mean, that's what we should do
[16:50:17] <muesli> agreed, no doubt
[16:50:23] <muesli> but it doesn't really fix anything right now
[16:50:38] <domme_> if we know it's indexed and what not.. we can save the javascript back and forth to get it out of the index via c++ and pass it back to c++
[16:50:46] <domme_> yes, it fixes compatibility with android
[16:51:40] <domme_> i don't expect this to be really hard, results don't need to have a resolver anyway
[16:51:42] <muesli> so are the resolvers diverged right now?
[16:51:57] <domme_> a bit, that's what i'm trying to fix in my branch
[16:52:11] <domme_> just get all this straight while at it for once
[16:52:27] <muesli> ok. just won't have any time for this myself anytime soon
[16:52:41] <domme_> in the end: it seems that all we need to do is to switch the pipeline to handle ResultProviders instead of Resolvers
[16:52:49] <domme_> muesli: naah, wasnt asking you to :-)
[16:53:07] <muesli> well, results _should_ have resolvers tho
[16:53:11] <muesli> a bunch of things depend on that
[16:53:35] <domme_> not really, they have result providers for almost a year now.. which can be a collection or a resolver
[16:53:43] <domme_> i did this refactoring work already
[16:54:07] <domme_> what are you thinking of? the things that depend on a resolver being available are actually only the name here and there
[16:54:08] <muesli> ok, don't fully remember this. too many context switches
[16:54:25] <domme_> yeah, can't blame you for that :-)
[16:54:42] <domme_> but given that we already have that ... it doesnt seem unreasonable to now let the pipeline handle that?
[16:55:04] <muesli> well, the pipeline itself won't have too much to do with it, i guess
[16:56:06] <domme_> hehe, i'll just give it a shot and try what i imagine. shouldn't be too much work after all i hope
[16:56:09] <muesli> we'd have to feed the fuzzyindex
[16:56:19] <muesli> which xhochy already linked up with resolvers for gmusic
[16:58:03] <domme_> well, we have javascript collection base class already that does/or will take care of that for starters. if we know the collection is an indexed one, we can circumvent the javascript call. but that's an optimization
[16:58:24] <domme_> important to me right now is just to get the structure right
[17:04:54] <MrMaffen> muesli: I have already implemented the whole collection stuff that is needed. the old way that xhochy implemented is not being used anymore. instead of calling Tomahawk.addToFuzzyIndex and building the fuzzy index manually you can now simply report all tracks to the Tomahawk.Collection. Everything else is being handled in there. The list of albums/artists/tracks ... albumTracks... artistAlbums etc
[17:06:17] <MrMaffen> so you can now report any possible list of tracks to Tomahawk.Collection and everything else is being handled for you ... from storing the relationships in a db to building the fuzzyIndex
[17:07:20] <domme_> and what i'm proposing now: the ScriptCollection object in c++, should call resolve() on the collection directly.. (which will also be handled automatically by mrmaffen's implementation).
[17:07:39] <domme_> right now everything needs to be piped through the resolver c++ object just to map it back to the collection afterwards which makes no sense at all
[17:07:49] <domme_> (i mean historically yes, but not anymore)
[17:08:42] <domme_> tl;dr: i think i know what i'm doing (and on the internet noone knows i'm a dog), just trust me, i'll do it. and it shouldnt take too long :)
[17:08:52] <domme_> and shouldnt even be too invasive :)
[17:27:04] *** Quits: ssam2 (~ssam2@82-70-136-246.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[17:46:49] *** Joins: knicklux (~knicklux@2a02:8071:2d8b:9800:9630:9657:908e:4c0e)
[17:54:04] *** Quits: Kalendium (~davidgasq@unaffiliated/kalendium) (Quit: Leaving)
[17:58:40] *** Joins: total1ty_ (~quassel@ipbcc36ea9.dynamic.kabel-deutschland.de)
[18:02:59] *** Quits: total1ty_ (~quassel@ipbcc36ea9.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[18:06:36] <theli_ua> muesli we are indexing resolver collections already
[18:06:57] <theli_ua> ie collection implementation does that automagically whenever tracks are added to collection
[18:07:10] <theli_ua> so far 2 resolvers use that, amazon and gmus
[18:07:32] <theli_ua> domme_: btw did you try amazon prime music? it doesn't work for theonering, I was wondering does it for you
[18:07:57] <domme_> not yet
[18:08:12] <theli_ua> muesli: fuzzyIndex is not linked to gmusic 
[18:08:32] <theli_ua> muesli: rather our javascript collection impementation is now separate and it uses fuzzyindex
[18:09:11] <theli_ua> muesli: it was changed with the new api, collection implementation is in tomahawk.js now, gmusic/amazon now just say "hey I have these tracks, make me collection from them"
[18:09:17] <domme_> yeah, and *at* *some* *point* we can think of avoiding the round trip through javascript to get the data out of the fuzzyindex. like mrmaffen is already doing on android
[18:10:02] <theli_ua> we could
[18:10:11] <domme_> yeah, not my priority tho
[18:10:14] <theli_ua> though one could argue we have more important things to take care about
[18:10:16] <theli_ua> right
[18:10:24] <domme_> exactly :-)
[18:35:24] *** Joins: depast (guest-depa@gateway/web/scrollback.io/x-gfwjmfkbbphvnlrv)
[18:35:24] <depast> ?
[18:35:25] <depast> hi . server source
[18:37:02] *** Parts: depast (guest-depa@gateway/web/scrollback.io/x-gfwjmfkbbphvnlrv) ()
[19:01:04] *** Quits: knicklux (~knicklux@2a02:8071:2d8b:9800:9630:9657:908e:4c0e) (Ping timeout: 252 seconds)
[19:26:24] *** Joins: knicklux (~knicklux@2a02:8071:2d8b:9800:9630:9657:908e:4c0e)
[19:41:49] *** Joins: total1ty_ (~quassel@ipbcc36ea9.dynamic.kabel-deutschland.de)
[19:46:42] *** Quits: total1ty_ (~quassel@ipbcc36ea9.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[20:02:45] *** Joins: modeno1 (modeno1@gateway/web/scrollback.io/x-biyoriwadvzkmahh)
[20:02:45] <modeno1> hey, I'm having some issues opening the project on qt. running cmake on root's CMakeLists.txt is causing errors
[20:17:01] <lfranchi_> please paste the errors and we can try to help!
[20:18:53] *** Joins: jamesaxl_ (~jamesaxl@41.249.5.39)
[20:46:33] <modeno1> can i link to a pastebin? the log's rather big
[20:46:39] *** Joins: total1ty_ (~quassel@ipbcc36ea9.dynamic.kabel-deutschland.de)
[20:50:15] <theli_ua> that would be a wise thing to do
[20:51:43] <modeno1> http://pastebin.com/HyGNHdte
[20:51:44] <tomabee> [ -- Building Tomahawk 0.8.99 ***  CMake Warning at CMakeLists.txt:162 (find_packa | pastebin.com | http://pastebin.com/i/fb2.jpg ]
[20:59:51] *** Quits: knicklux (~knicklux@2a02:8071:2d8b:9800:9630:9657:908e:4c0e) (Ping timeout: 252 seconds)
[21:10:39] <domme_> theli_ua: MrMaffen: jherskowitz: can you check something for me? if you resolve a track to gmusic and hover the icon in the audiocontrols.. does it show "Playing from" without a name?
[21:11:05] <domme_> oh actually.. it might be that it only happens for all access which none of you is using?
[21:11:20] <theli_ua> I dont even know what icon to hover
[21:11:55] <theli_ua> if you are talking about tray icon ... it never had any "playing from" for me
[21:12:02] <domme_> no
[21:12:05] <domme_> in audiocontrols
[21:12:09] <domme_> above the progress bar
[21:15:07] <theli_ua> oh
[21:15:08] <theli_ua> cool
[21:15:22] <theli_ua> currently it says "Playing from Amazon Music Collection" for me
[21:15:47] <domme_> yeah was talking about gmusic
[21:15:48] <theli_ua> and for the track not in my collection it says "Playing from Amazon"
[21:15:53] <domme_> anyway, something else is wonky will look
[21:16:01] <theli_ua> i know, but I don't have gmusic all access
[21:16:15] <theli_ua> for tracks in my collection it says "from Google Play Music"
[21:16:47] <theli_ua> and since gmusic and amazon are implemented in the same way I gave you as much information as I could
[21:17:14] <theli_ua> (same way - using js collection implementation + 'all/some access from resolver itself')
[21:17:21] <theli_ua> domme_: ^
[21:18:43] <domme_> hehe, yeah, thanks
[21:19:05] <theli_ua> http://i.imgur.com/C1440Qd.png 
[21:22:18] <theli_ua> http://i.imgur.com/Z21O9bB.png
[21:22:24] <theli_ua> domme_: screenshots of both cases
[21:23:36] <domme_> thanks
[21:24:03] <theli_ua> actually, I didn't even know you could tell does it play from collection or not
[21:24:06] <theli_ua> thats pretty cool
[21:24:14] <domme_> yeah, i implemented it end of last year for hmv
[21:24:26] <domme_> or early this year
[21:24:57] <theli_ua> domme_: btw, it is trivial to use a different icon for collection
[21:25:12] <domme_> i know?
[21:25:26] <theli_ua> I just now realised it
[21:25:34] <domme_> hehe, it is trivial now
[21:25:38] <domme_> because i did that a year ago ;-)
[21:25:41] <theli_ua> they way you mentioned it sounded like it required code changes
[21:26:45] <theli_ua> hm, I should have an amazon icon with the standard prime stripe on it for prime music and without it for collection
[21:26:57] <domme_> <3
[21:27:02] <domme_> that would be superawesome
[21:27:04] <theli_ua> though collection can have prime tracks you never paid for 
[21:27:17] <theli_ua> ie the ones you just "add to your library" instead of purchase
[21:27:46] <domme_> fair enough
[21:28:25] <theli_ua> I can filter those out from collection view but I have no idea why would I do that
[21:28:46] <domme_> yeah don't worry
[21:29:00] <theli_ua> oh, I"m not worrying :)
[21:56:40] *** Joins: soee (~soee@agwb150.neoplus.adsl.tpnet.pl)
[21:57:36] *** Parts: modeno1 (modeno1@gateway/web/scrollback.io/x-biyoriwadvzkmahh) ()
[21:58:15] *** Quits: soee_ (~soee@afcr225.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:10:09] <jherskowitz> theli_ua: https://github.com/tomahawk-player/tomahawk
[22:10:10] <tomabee> [ tomahawk-player/tomahawk · GitHub | github.com | https://avatars2.githubusercontent.com/u/440844?v=3&s=400 ]
[22:10:13] <jherskowitz> oops
[22:10:46] <jherskowitz> theli_ua: https://www.dropbox.com/s/tv7o3qtejz8aodm/Screenshot%202015-11-20%2016.10.39.png?dl=0
[22:10:48] <tomabee> [ Screenshot 2015-11-20 16.10.39.png | www.dropbox.com | https://photos-5.dropbox.com/t/2/AADIc2-7tmC35avjQLb-jOxEFuCzbK-3XvDLMUdG-VxPnA/12/986425/png/1024x768/2/_/0/4/Screenshot%202015-11-20%2016.10.39.png/CLmaPCABIAIgBygBKAIoBCgH/tv7o3qtejz8aodm/AAAnYx9QznrY3FoI4GkXckJka/Screenshot%202015-11-20%2016.10.39.png ]
[22:11:18] <jherskowitz> theli_ua: that being said, it’s not playing
[22:11:27] <jherskowitz> the headphone icon
[22:11:40] <theli_ua> jherskowitz: yeah, I posted my screenshots as well :(
[22:11:43] <jherskowitz> (that’s the google music icon)
[22:11:46] <theli_ua> *  wrong smilie  :)
[22:11:50] <jherskowitz> heh
[22:12:10] <theli_ua> http://i.imgur.com/C1440Qd.png   and http://i.imgur.com/Z21O9bB.png
[22:12:42] *** Joins: github-tomahawk (~github-to@192.30.252.40)
[22:12:42] <github-tomahawk> [13tomahawk] 15dschmidt pushed 4 new commits to 06promisify-all-the-things: 02http://git.io/v4AYg
[22:12:42] <github-tomahawk> 13tomahawk/06promisify-all-the-things 14dc32f7e 15Dominik Schmidt: Remove legacy hacks and add useful error
[22:12:42] <github-tomahawk> 13tomahawk/06promisify-all-the-things 14f05f3a8 15Dominik Schmidt: Make collections able to resolve queries
[22:12:42] <github-tomahawk> 13tomahawk/06promisify-all-the-things 14dd026d2 15Dominik Schmidt: Remove legacy hack
[22:12:42] *** Parts: github-tomahawk (~github-to@192.30.252.40) ()
[22:13:03] <domme_> theli_ua: i hadnt actually looked what you were listening to... soulless is a great song :-D
[22:15:45] *** Joins: github-tomahawk (~github-to@192.30.252.42)
[22:15:45] <github-tomahawk> [13tomahawk] 15dschmidt 04force-pushed 06promisify-all-the-things from 1489f2762 to 141694659: 02http://git.io/v4AOQ
[22:15:45] <github-tomahawk> 13tomahawk/06promisify-all-the-things 144637f3e 15Dominik Schmidt: Make collections able to resolve queries
[22:15:45] <github-tomahawk> 13tomahawk/06promisify-all-the-things 14f3c8038 15Dominik Schmidt: Remove legacy hack
[22:15:45] <github-tomahawk> 13tomahawk/06promisify-all-the-things 141694659 15Dominik Schmidt: Allow script jobs to return object members directly if they are not functions
[22:15:45] *** Parts: github-tomahawk (~github-to@192.30.252.42) ()
[22:16:01] <theli_ua> yuck
[22:16:03] <theli_ua> force push
[22:17:10] <domme_> yes, that's what you have to do if you fix commits afterwards
[22:17:23] <domme_> nothing wrong with doing that when you work alone on a branch
[22:20:11] <theli_ua> :P
[22:23:17] <domme_> anyway.. your hack is gone :-)
[22:24:48] <TheOneRing> domme_: jherskowitz what is the tomahawk red, and is there a way to query ot from tomahawk?
[22:24:58] <domme_> red?
[22:25:05] <domme_> ot?
[22:25:18] <jherskowitz> TheOneRing: it is just the color of the icon
[22:25:32] <jherskowitz> I can get you a hex value if you need
[22:26:04] <domme_> aah, that
[22:26:08] <TheOneRing> ok there is no possebility to ask tomahawk for it? so if it gets changed id needs to be changed in all places?
[22:26:21] <TheOneRing> and hmv?
[22:26:39] <domme_> TheOneRing: just make it a cmake config variable
[22:27:03] <TheOneRing> ok ... ouch ^^
[22:53:39] *** Quits: jturney (~jon@host86-141-129-50.range86-141.btcentralplus.com) (Ping timeout: 255 seconds)
[22:54:01] *** Joins: jturney (~jon@host86-141-129-50.range86-141.btcentralplus.com)
[23:01:47] *** Quits: jturney (~jon@host86-141-129-50.range86-141.btcentralplus.com) (Read error: Connection reset by peer)
[23:05:17] *** Joins: jturney (~jon@host86-141-129-50.range86-141.btcentralplus.com)
[23:47:30] *** Quits: jamesaxl_ (~jamesaxl@41.249.5.39) (Ping timeout: 260 seconds)
