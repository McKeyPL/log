[00:17:27] *** Quits: TheOneRing (~quassel@HSI-KBW-134-3-252-64.hsi14.kabel-badenwuerttemberg.de) (Changing host)
[00:17:27] *** Joins: TheOneRing (~quassel@amarok/developer/TheOneRing)
[00:45:33] <theli_ua> domme, muesli how does "expire" attribute of track resolution result wors/behaves?
[00:45:52] *** Quits: fw4a (~fw4a@95.91.235.196) (Ping timeout: 272 seconds)
[00:53:43] *** Quits: soee (~soee@u28n61.nowanet.pl) (Quit: Konversation terminated!)
[01:02:40] <domme> theli_ua: no clue
[01:02:54] <domme> dont know about i think
[01:55:33] *** Quits: HorusHorrendus (~horrendus@ip5b405730.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:09:44] *** Quits: jturney (~jon@host31-51-205-230.range31-51.btcentralplus.com) (Read error: Connection reset by peer)
[05:39:44] *** Joins: mgue (~mgue@x590ef611.dyn.telefonica.de)
[05:42:47] *** Quits: mgue2 (~mgue@x590f151b.dyn.telefonica.de) (Ping timeout: 252 seconds)
[07:02:33] *** Quits: tomabee (~beehive@conflagration.hatchet.is) (Ping timeout: 265 seconds)
[07:02:53] *** Joins: tomabee (~beehive@conflagration.hatchet.is)
[07:03:31] *** Quits: MrMaffen (~MrMaffen@server1.muehlhaeuser.de) (Ping timeout: 265 seconds)
[07:08:56] *** Joins: MrMaffen (~MrMaffen@server1.muehlhaeuser.de)
[08:18:33] *** Quits: xdarklight_ (~freenode@unaffiliated/xdarklight) (Remote host closed the connection)
[08:48:35] *** Parts: modeno1 (guest-mode@gateway/web/scrollback.io/x-ktjejayhtjybjgeh) ()
[08:48:35] *** Parts: basive6 (guest-basi@gateway/web/scrollback.io/x-crejouvqsuetxsbh) ()
[08:48:35] *** Parts: blocke1 (guest-bloc@gateway/web/scrollback.io/x-imjqegwcqtqvikmo) ()
[08:48:35] *** Parts: arompt (guest-arom@gateway/web/scrollback.io/x-xispgaynqksdqkvu) ()
[08:48:35] *** Parts: yeaske2 (guest-yeas@gateway/web/scrollback.io/x-vjegzkvlmflbsdcr) ()
[08:48:35] *** Parts: roubly1 (guest-roub@gateway/web/scrollback.io/x-svubylvrywyoyhwf) ()
[09:08:15] *** Joins: ssam2 (~ssam2@212.91.253.218)
[10:06:59] *** Quits: tomabee (~beehive@conflagration.hatchet.is) (Ping timeout: 240 seconds)
[10:31:39] *** Quits: SolarAquarion (SolarAquar@unaffiliated/solaraquarion) (Ping timeout: 240 seconds)
[10:38:57] *** Joins: SolarAquarion (SolarAquar@2600:3c01:e001:3970::7)
[10:38:57] *** Quits: SolarAquarion (SolarAquar@2600:3c01:e001:3970::7) (Changing host)
[10:38:57] *** Joins: SolarAquarion (SolarAquar@unaffiliated/solaraquarion)
[10:58:10] <toma-cat> Added new crash-report for version 0.7.0 (Linux)
[11:15:59] *** Joins: HorusHorrendus (~horrendus@ip5b405730.dynamic.kabel-deutschland.de)
[11:20:27] *** Joins: alsuren (~alsuren@host86-162-74-153.range86-162.btcentralplus.com)
[11:41:35] *** Quits: ssam2 (~ssam2@212.91.253.218) (Ping timeout: 264 seconds)
[11:44:58] *** Joins: ssam2 (~ssam2@212.91.253.218)
[12:03:21] *** Joins: jturney (~jon@host31-51-205-230.range31-51.btcentralplus.com)
[12:20:10] *** Joins: jturney1 (~jon@host31-51-205-230.range31-51.btcentralplus.com)
[12:20:11] *** Quits: jturney (~jon@host31-51-205-230.range31-51.btcentralplus.com) (Disconnected by services)
[12:44:07] *** Joins: moru (~moru@81.189.130.58)
[12:44:37] *** Joins: modeno1 (guest-mode@gateway/web/scrollback.io/x-fpghxcnmvflmfwmf)
[12:44:37] <modeno1> horushorrendus2: FEUP, in Portugal
[12:55:20] *** Quits: moru (~moru@81.189.130.58) (Remote host closed the connection)
[13:15:53] <modeno1> 3rd year, btw
[13:22:37] <muesli> theli_ua: what exactly are you referring to?
[13:22:58] <muesli> modeno1: there's a ci, so your commits get build on osx, windows & linux
[13:39:47] *** Quits: HorusHorrendus (~horrendus@ip5b405730.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[14:14:58] <zopieux> just saw the android app for the first time!
[14:15:02] <zopieux> neat UI!
[14:50:51] *** Quits: alsuren (~alsuren@host86-162-74-153.range86-162.btcentralplus.com) (Quit: alsuren)
[14:58:39] *** Quits: SolarAquarion (SolarAquar@unaffiliated/solaraquarion) (Ping timeout: 240 seconds)
[15:06:47] <jherskowitz> moin
[15:44:37] *** Joins: SolarAquarion (SolarAquar@2600:3c01:e001:3970::7)
[15:44:37] *** Quits: SolarAquarion (SolarAquar@2600:3c01:e001:3970::7) (Changing host)
[15:44:37] *** Joins: SolarAquarion (SolarAquar@unaffiliated/solaraquarion)
[16:57:39] *** Quits: SolarAquarion (SolarAquar@unaffiliated/solaraquarion) (Ping timeout: 240 seconds)
[17:18:56] *** Joins: bodam2005 (~bodam2005@161.209.206.203)
[17:24:30] <zopieux> moin
[17:24:40] <zopieux> is it possible to create pure java resolvers for Android?
[17:25:15] <zopieux> the simple idea of using JS for anything but blinking a <button> makes me lose my mind
[17:26:41] *** Joins: SolarAquarion (SolarAquar@2600:3c01:e001:3970::7)
[17:26:41] *** Quits: SolarAquarion (SolarAquar@2600:3c01:e001:3970::7) (Changing host)
[17:26:41] *** Joins: SolarAquarion (SolarAquar@unaffiliated/solaraquarion)
[17:51:03] *** McKeyPL is now known as Discord
[18:03:50] *** Quits: ssam2 (~ssam2@212.91.253.218) (Quit: Leaving)
[18:13:19] *** Joins: alsuren (~alsuren@host86-162-74-153.range86-162.btcentralplus.com)
[18:27:44] <toma-cat> Added new crash-report for version 0.7.0 (Linux)
[18:29:48] <domme> zopieux: whats the problem?
[18:31:25] *** Joins: rotzbouw (~thierry@HSI-KBW-37-49-122-154.hsi14.kabel-badenwuerttemberg.de)
[18:44:09] <toma-cat> Added new crash-report for version 0.7.0 (Linux)
[18:45:43] *** Joins: WillisMan (~Thunderbi@88.96.238.246)
[18:45:44] *** Quits: EvilAaron_ (~User@d206-116-119-133.bchsia.telus.net) (Quit: Leaving)
[18:46:13] *** Quits: alsuren (~alsuren@host86-162-74-153.range86-162.btcentralplus.com) (Quit: alsuren)
[18:46:33] <theli_ua> muesli : isn't there a way for resolver to say that URL expires eventually?
[18:47:39] *** Quits: WillisMan (~Thunderbi@88.96.238.246) (Client Quit)
[18:51:44] <jherskowitz> zopieux: in theory you can write them in anything. 
[18:52:20] *** Joins: soee (~soee@u28n61.nowanet.pl)
[18:52:22] <theli_ua> *but there are no ready-to use bindings to write resolvers in something other than js
[18:56:23] <muesli> theli_ua: actually there are
[18:56:28] <muesli> theli_ua: spotify is a binary resolver
[18:56:37] <muesli> there are also examples of php & perl resolvers iirc
[18:56:46] <muesli> they might not support the full feature set tho
[18:56:49] <theli_ua> well, apart from writing a binary resolver I meant
[18:57:01] <theli_ua> but I never heard of php and perl examples o_O
[18:57:21] <muesli> theli_ua: anything that can communicate via stdin/out
[18:57:35] <muesli> https://github.com/tomahawk-player/tomahawk-resolvers/tree/master/examples/php
[19:07:41] <theli_ua> muesli: but, how do you even install such resolver?
[19:08:08] <muesli> theli_ua: install from file in the settings
[19:08:28] <theli_ua> weird, I thought it wont allow anything other than js
[19:08:30] <theli_ua> anyhow
[19:08:37] <theli_ua>  <> muesli : isn't there a way for resolver to say that URL expires eventually?
[19:08:43] <theli_ua> (wrt "expires" )
[19:09:18] <muesli> theli_ua: not yet. currently we deal with this situation by providing service specific urls
[19:09:23] <muesli> and let the resolver handle that case
[19:09:31] <muesli> domme and i did talk about auto-expiring results tho
[19:09:33] <muesli> e.g. for youtube
[19:10:22] <theli_ua> alright, thats what I used for the resolver I needed that as well
[19:28:05] *** Joins: moru (~moru@chello084112023156.14.11.vie.surfer.at)
[19:32:31] *** Quits: moru (~moru@chello084112023156.14.11.vie.surfer.at) (Ping timeout: 246 seconds)
[19:35:46] *** Joins: moru (~moru@chello062178040178.14.11.vie.surfer.at)
[19:37:28] *** Joins: HorusHorrendus (~horrendus@ip5b405730.dynamic.kabel-deutschland.de)
[19:39:58] *** Quits: moru (~moru@chello062178040178.14.11.vie.surfer.at) (Ping timeout: 240 seconds)
[19:51:11] *** Quits: jturney1 (~jon@host31-51-205-230.range31-51.btcentralplus.com) (Ping timeout: 264 seconds)
[19:52:30] *** Joins: jturney (~jon@host31-51-205-230.range31-51.btcentralplus.com)
[20:29:46] <zopieux> hey guys, clicking in "Connect with spotify" in android app (running in genymotion, x86) does nothing
[20:29:53] <zopieux> I installed the required plugin
[20:30:39] <muesli> MrMaffen: ^
[20:31:48] <theli_ua> zopieux: are you using a nightly or latest play store release?
[20:32:05] <zopieux> (supposedly) relevant log: tomahawk.tomahawk_android D/TomahawkWebChromeClient: Uncaught ReferenceError: Promise is not defined -- From line 857 of file:///android_asset/js/tomahawk.js
[20:32:13] <zopieux> theli_ua: git master
[20:32:29] <zopieux> I can test with a release
[20:32:59] <zopieux> let's try with 0.83
[20:36:45] <zopieux> damn it, there is no x86 flavor
[20:38:41] <theli_ua> why would you want to run it in emulator btw?
[20:39:53] <zopieux> much faster loading
[20:40:14] <theli_ua> than what
[20:40:22] <zopieux> like, 15 seconds in genymotion, a full minute using my arm device
[20:40:46] <theli_ua> oh, you mean you want to help with development
[20:40:51] <zopieux> I am
[20:40:57] <zopieux> already fixed a NPE :d
[20:41:33] <zopieux> (well, a group of NPEs)
[20:41:34] <theli_ua> do you have spotify installed in yout genymotion?
[20:41:39] <zopieux> nope
[20:41:57] <theli_ua> I'm not sure, maybe its needed (I dont really use tomahawk on a phone, I'm just speculating)
[20:42:07] <zopieux> but tomahawk downloaded a little thing
[20:42:34] <zopieux> tomahawk-android-spotify-x86-something
[20:43:10] <zopieux> I hate this android cropping, you just can't expand the full string
[20:43:55] <zopieux> tomahawk-android-spotify-x86-release.apk
[20:45:17] <zopieux> it's too much of a burden to install spotify so i'll forget about that
[20:46:17] <theli_ua> well, I have no idea if its needed
[20:47:32] <theli_ua> zopieux: what service did you want to write resolver for anyway?
[20:54:04] <muesli> i don't think you need spotify installed, no
[20:54:10] <muesli> it should download the appropriate plugin itself
[20:54:16] <muesli> but i'll let MrMaffen respond to that, he knows best :)
[21:02:32] *** Joins: alsuren (~alsuren@host86-162-74-153.range86-162.btcentralplus.com)
[21:03:07] <zopieux> indeed it does, and I installed said plugin
[21:03:47] <zopieux> any idea why the placeholders for empty artist/album scales so bad, even though there are super highres versions of it?
[21:06:15] <theli_ua> I dont think anyone except MrMaffen has much context on tomahawk android here
[21:17:01] <zopieux> okay
[21:20:17] <theli_ua> zopieux: so, anyway, why did you ask about writing resolver in java, do you want to create resolver for some service?
[21:27:12] <zopieux> I'd like to experiment yes, but I guess I can try working with the js api
[21:38:44] <theli_ua> its ok, I hate JS and never ever done anything with it but I managed to create couple of resolvers
[21:47:45] *** Quits: alsuren (~alsuren@host86-162-74-153.range86-162.btcentralplus.com) (Quit: alsuren)
[21:47:45] *** Joins: svetter_ (~svetter@83.150.41.198)
[21:47:45] *** Quits: svetter_ (~svetter@83.150.41.198) (Client Quit)
[21:48:43] *** Joins: svetter_ (~svetter@2001:8e0:2003:fe00:c483:17bd:5566:81a)
[21:56:27] <zopieux> hm, there is something I don't understand though: most useful resolvers (spotify, deezer, gmusic) have a "plugin" you have to download separately from tomahawk website
[21:56:37] <MrMaffen> zopieux: hi :)
[21:57:03] <zopieux> what is their purpose? how are they built? are they provided in tomahawk-android repo or do I have to clone something else?
[21:57:04] <MrMaffen> zopieux: do you mean the button in the spotify resolver config when you say clicking in "Connect with spotify" ?
[21:57:19] <zopieux> hello MrMaffen! I'm trying to get the broader picture so I can start contributing
[21:57:24] <MrMaffen> zopieux: gmusic doesn't need an external plugin app
[21:57:31] <zopieux> yeah, my bad
[21:57:45] <MrMaffen> we have to offer separate plugin apps for spotify deezer and rdio because those only offer closed source SDKs
[21:57:57] <MrMaffen> for every service we can connect to directly we don't need a plugin app
[21:58:07] <zopieux> oh, I see, so you have to interact with some third party android SDK
[21:58:12] <MrMaffen> yep
[21:58:24] <MrMaffen> and that's provided with the plugin app
[21:58:34] <zopieux> and the prebuilt APK you provide are thin layers between tomahawk and the SDK I guess?
[21:58:48] <MrMaffen> yea plus the actual sdk library jars
[21:59:17] <zopieux> okay great
[21:59:23] <MrMaffen> normally you don't need that at all
[21:59:27] <zopieux> yep
[22:00:10] <MrMaffen> as for writing a java resolver. I'd really prefer a js resolver. we built the tomahawk resolver API around the idea of them being cross-compatible between all clients
[22:00:31] <MrMaffen> you'd only have to write one js resolver and then you'd be able to use it in the tomahwak desktop and android app
[22:00:42] <MrMaffen> and any upcoming other clients (like iOS) 
[22:01:18] <zopieux> well, actually I would like to write a resolver for a friend's music website project and this website does not provide usable mp3 files, it embeds them in some protobuf nonsense, so I would need to write a plugin that does the actual download and stream the mp3 back to tomahawk
[22:01:19] <MrMaffen> zopieux: just reading the backlog. tbh I haven't tested the plugin apps on x86 devices yet
[22:02:07] <zopieux> I guess I can't do intricate networking/decoding stuff in the JS API
[22:03:33] <MrMaffen> it's not possible to transfer PCM data through the js interface to tomahawk, no :/
[22:03:56] <MrMaffen> normally the js resolver would resolve a playable url in getStreamUrl and then hand that over to vlc
[22:04:05] <MrMaffen> vlc then does all the playback work
[22:04:15] <zopieux> yes, so I basically need to produce anything that VLC can handle
[22:04:31] <zopieux> that's what I thought
[22:04:43] <zopieux> so I actually need to build a side APK with this stuff right?
[22:05:37] <MrMaffen> zopieux: I'd say the proper way of solving the issue would be to improve the API on your friend's website :D
[22:05:58] <MrMaffen> sound actually easier than handling all of that jazz on the client-side
[22:06:03] <zopieux> of course, but I can't do that ATM :D
[22:06:34] <zopieux> MrMaffen: I can't find the source for the tomahawk-android-{spotify,deezer}-x86-release.apk stuff, care to give me some link?
[22:06:40] <MrMaffen> but if that's not possible then yea. You'd want to write a java resolver. if your code is open-source you don't need an external plugin app though
[22:07:22] <MrMaffen> zopieux: haven't published that yet
[22:07:24] <zopieux> you mean I could embed the java logic into a custom build of tomahawk? or do I *have* to produce an external APK?
[22:09:01] <MrMaffen> zopieux: currently you can only install js resolver as plugins. so you'd have to go for a custom build of tomahawk unfortunately
[22:09:23] <MrMaffen> that doesn't mean you'd need an external apk though
[22:09:44] <zopieux> would you mind share some hints on how to begin integrating the java resolver? entry points, where to put logic, things like that
[22:09:45] <MrMaffen> you only need an external apk if you don't want to publish the code that connects to your friend's website
[22:09:53] <zopieux> thanks for all your answers!
[22:11:20] <MrMaffen> hm let me think about that for a second
[22:11:21] <zopieux> the code will be open sourced anyway (you can't really do closed source APKs, you need to embed native shared libraries to make RE actually difficult)
[22:11:47] <zopieux> okay thanks, I'll stay tuned
[22:12:07] <zopieux> I may start opening PRs soon for various things not related to resolvers
[22:12:08] <MrMaffen> yea it's not about prohibiting RE, but rather regarding the legal licensing stuff
[22:12:38] <MrMaffen> you can't mix gpl (tomahawk's license) with closed-source code
[22:12:48] <MrMaffen> zopieux: nice, glad to hear :)
[22:14:38] <MrMaffen> zopieux: I'd probably start by implementing your playback logic in a class that implements https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/tomahawk_android/mediaplayers/TomahawkMediaPlayer.java
[22:15:04] <MrMaffen> zopieux: searching for songs on the website would be done in a class that implements https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/libtomahawk/resolver/Resolver.java
[22:15:25] <zopieux> great
[22:16:34] <zopieux> hm I would rather create a embedded http server so VLC can read the files, would it be possible?
[22:17:57] <zopieux> eg. I would output Results with url fooresolver://<some-internal-id> and serve these files in a custom http server implementation
[22:18:08] <MrMaffen> zopieux: when tomahawk is being asked to play a certain song TomahawkMediaPlayer#prepare(...) is being called
[22:18:19] <zopieux> (in which I implement the protobuf decoding)
[22:18:21] <MrMaffen> so I'd do all your embedded http server there
[22:18:28] <MrMaffen> +magic
[22:18:30] <zopieux> okay lemme check that, thanks
[22:20:29] <MrMaffen> zopieux: so yea after you're done with that you want to add your resolver implementation in the constructor of https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/libtomahawk/resolver/PipeLine.java
[22:21:26] <MrMaffen> but keep in mind, you're working around lots of code that's already there and working just to get your custom decoding to work ^^
[22:21:54] <MrMaffen> serving mp3 url through a js resolver is way easier imo
[22:21:59] <MrMaffen> urls*
[22:22:32] <zopieux> yep, but I need to serve said URLs!
[22:23:15] <zopieux> I can still write the resolving in JS I guess, but I need a custom loading of the result mPath
[22:24:09] <zopieux> the metadata acquisition is basically JSON, but then I need to convert the song ID to mp3 and this has to be done in Java
[22:25:40] <MrMaffen> zopieux: services like gmusic do require the same thing, but they offer an API endpoint that allows logged-in users to convert song IDs to mp3 urls (through a redirect)
[22:26:06] <MrMaffen> that's done in getStreamUrl
[22:27:44] <zopieux> I don't have such an endpoint though :(
[22:28:03] <zopieux> I'm still not sure when to spawn the server logic/runloop
[22:28:11] <zopieux> s/when/where/
[22:30:07] <MrMaffen> zopieux: you'll get a Query in TomahawkMediaPlayer#prepare ... mPath in that given Query's first result will contain your song ID (in whichever format your resolver stores it in the result)
[22:30:19] <MrMaffen> maybe fooresolver://<some-internal-id> like you said
[22:30:37] <MrMaffen> then you can do all the work there ... convert it, prepare it
[22:31:07] <MrMaffen> and when TomahawkMediaPlayer#play is being called, you'll have to do some magic to get vlc to play the file from your embedded http server
[22:39:54] <zopieux> hm
[22:40:06] <zopieux> what kind of magic? :D
[22:40:18] <zopieux> the big question is how to "register" the fooresolver:// scheme
[22:40:46] <zopieux> I'm quite new to android development in general and I don't know how you interact with libvlc
[22:40:54] <zopieux> I guess you embedded it in tomahawk?
[22:41:28] <zopieux> oh okay, VLCMediaPlayer.
[22:43:20] <zopieux> what the hell is aidl :D
[22:43:34] <theli_ua> android interface definition language
[22:43:42] *** Quits: svetter_ (~svetter@2001:8e0:2003:fe00:c483:17bd:5566:81a) (*.net *.split)
[22:43:43] *** Quits: grindhold (~quassel@c035.cyan.servdiscount-customer.com) (*.net *.split)
[22:43:43] *** Quits: solues1 (~solues1@gateway/web/scrollback.io/x-hzmaugxedncnggux) (*.net *.split)
[22:43:43] *** Quits: thomasbonte (sid4377@gateway/web/irccloud.com/x-mzkdnwcsgvstwsrt) (*.net *.split)
[22:43:43] *** Quits: Techman (sid11863@gateway/web/irccloud.com/x-tfhxpxsszhbaacka) (*.net *.split)
[22:43:43] *** Quits: alastairp (sid1249@gateway/web/irccloud.com/x-rapjgbculpvaxvkg) (*.net *.split)
[22:43:44] *** Quits: leonhandreke_ (~quassel@roubaix.ndreke.de) (*.net *.split)
[22:44:33] <zopieux> I guess this is how MrMaffen communicates with his prebuilt APKs
[22:46:10] *** Joins: svetter_ (~svetter@2001:8e0:2003:fe00:c483:17bd:5566:81a)
[22:46:10] *** Joins: grindhold (~quassel@c035.cyan.servdiscount-customer.com)
[22:46:10] *** Joins: solues1 (~solues1@gateway/web/scrollback.io/x-hzmaugxedncnggux)
[22:46:10] *** Joins: thomasbonte (sid4377@gateway/web/irccloud.com/x-mzkdnwcsgvstwsrt)
[22:46:10] *** Joins: Techman (sid11863@gateway/web/irccloud.com/x-tfhxpxsszhbaacka)
[22:46:10] *** Joins: alastairp (sid1249@gateway/web/irccloud.com/x-rapjgbculpvaxvkg)
[22:46:10] *** Joins: leonhandreke_ (~quassel@roubaix.ndreke.de)
[22:48:02] *** Joins: xdarklight (~freenode@unaffiliated/xdarklight)
[22:57:07] *** Quits: jturney (~jon@host31-51-205-230.range31-51.btcentralplus.com) (Disconnected by services)
[22:57:12] *** Joins: jturney1 (~jon@host31-51-205-230.range31-51.btcentralplus.com)
[23:20:45] <MrMaffen> zopieux: you don't register the scheme. the results are associated with your resolver which in turn is associated with your TomahawkMediaPlayer implementation 
[23:20:48] <MrMaffen> that happens here https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/libtomahawk/resolver/Result.java#L77-77
[23:21:30] <MrMaffen> zopieux: you would basically have to convert your song ID to something playable and then use VLCMediaPlayer to do the playback for you
[23:21:50] <MrMaffen> and yes AIDL is the interface language that I use to communiate with the external plugin apps
[23:23:23] <zopieux> MrMaffen: so I have to run my http server on some random port and give the URL to VLCMediaPlayer
[23:23:44] <zopieux> I can't do something cleaner involving a pipe or whatever's available
[23:26:00] *** Quits: svetter_ (~svetter@2001:8e0:2003:fe00:c483:17bd:5566:81a) (Quit: Leaving...)
[23:27:04] <MrMaffen> zopieux: yea that's how I would do it. alternatively you could give the raw PCM data to libvlc directly
[23:27:28] <zopieux> using shared memory?
[23:29:25] <zopieux> oaky so I created a FooResolver implements Resolver, it's running fine according to logs, and added addResolver(FooResolver.getInstance()) in Pipeline constructor
[23:29:41] <zopieux> thing is, the resolve() method is never hit when eg. searching for a song
[23:30:04] <zopieux> the available() getter returns true
[23:30:16] <MrMaffen> zopieux: not sure how exactly you can do that, but I'm guessing that there's some sort of method in libVLC
[23:30:26] *** Quits: jturney1 (~jon@host31-51-205-230.range31-51.btcentralplus.com) (Ping timeout: 244 seconds)
[23:30:43] *** Joins: jturney (~jon@host31-51-205-230.range31-51.btcentralplus.com)
[23:30:49] <MrMaffen> zopieux: available?
[23:30:55] <zopieux> actually none of my FooResolver instance methods is hit
[23:31:11] <zopieux> I meant initalized() and the like
[23:31:19] <zopieux> seems like pipeline ignores my resolver
[23:32:41] <zopieux> let's debug further!
[23:33:13] <MrMaffen> https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/libtomahawk/resolver/PipeLine.java#L250-250
[23:34:00] <zopieux> yep, I put a breakpoint, not hit on search, what the hell
[23:35:20] <MrMaffen> sounds like something's fishy with your debugger
[23:35:49] <MrMaffen> here's where the PipeLine method is being invoked https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/libtomahawk/resolver/PipeLine.java#L250-250
[23:35:49] <zopieux> restarted; works better :p
[23:35:56] <MrMaffen> oh sry
[23:36:01] <MrMaffen> wrong link
[23:36:06] <MrMaffen> this one's the correct one https://github.com/tomahawk-player/tomahawk-android/blob/master/src/org/tomahawk/tomahawk_android/fragments/SearchPagerFragment.java#L257-257
[23:46:34] <zopieux> well, what the hell MrMaffen: if I disable all break points, I can search without issues
[23:47:09] <zopieux> if I do enable the breakpoints I put in the TomahawkRunnable for resolve(), even if I quickly "continue" the program, the search just stalls and nothing get found
[23:49:29] <zopieux> the debugger just does not intercept breakpoints on this forloop, super weird
[23:57:22] <MrMaffen> hm no idea sry
[23:57:36] <MrMaffen> works on my machine
